// Generated by Java* Fuzzer test generator (1.0.001). Tue Jul  4 11:16:01 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=4197307443L;
    public static float fFld=-55.955F;
    public static boolean bFld=false;
    public static double dFld=-115.39289;
    public int iArrFld[][]=new int[N][N];
    public static long lArrFld[]=new long[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 51164L);
        FuzzerUtils.init(Test.fArrFld, -45.1F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i4=-15744, i5=11, i6=11, i7=-77, i8=-2, i9=2, i10=-42159;
        short s=-29577;
        byte by=-28;
        boolean b=false;

        i4 *= i4;
        Test.fFld = s;
        for (i5 = 3; i5 < 183; ++i5) {
            if (b) {
                for (i7 = 1; i7 < 9; ++i7) {
                    i6 -= (int)0L;
                    for (i9 = 1; i9 < 2; ++i9) {
                        s = (short)i4;
                    }
                    i10 >>= i5;
                }
                vMeth1_check_sum += i4 + s + i5 + i6 + i7 + i8 + i9 + i10 + by + (b ? 1 : 0);
                return;
            } else if (b) {
                Test.fFld /= (i5 | 1);
                if (b) {
                    Test.instanceCount *= Test.instanceCount;
                    if (i6 != 0) {
                        vMeth1_check_sum += i4 + s + i5 + i6 + i7 + i8 + i9 + i10 + by + (b ? 1 : 0);
                        return;
                    }
                    i8 += (((i5 * i6) + i5) - Test.instanceCount);
                    i10 += (((i5 * by) + Test.instanceCount) - Test.instanceCount);
                }
            } else if (b) {
                i10 += i5;
            } else {
                b = Test.bFld;
            }
        }
        vMeth1_check_sum += i4 + s + i5 + i6 + i7 + i8 + i9 + i10 + by + (b ? 1 : 0);
    }

    public static int iMeth(long l, int i3) {

        double d=102.104813;
        int i11=-12659, i12=4, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -244);

        iArr = (iArr = iArr);
        vMeth1();
        d += i3;
        for (i11 = 11; i11 < 353; ++i11) {
            Test.fFld += 32455;
        }
        d *= i12;
        long meth_res = l + i3 + Double.doubleToLongBits(d) + i11 + i12 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth(int i) {

        int i1=180, i2=0, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -37843);

        for (i1 = 386; i1 > 23; i1 -= 2) {
            i = iMeth(Test.instanceCount, i);
            i -= (int)Test.dFld;
            i = (int)Test.dFld;
            Test.fFld -= i2;
        }
        iArr1[(42570 >>> 1) % N] >>= i;
        i = i2;
        vMeth_check_sum += i + i1 + i2 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i13=-65, i14=41353, i15=64068, i16=-27148, i17=-12, i18=-38, i19=12, i20=43885, i21=-3, i22=7;
        short s1=27976;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-10);

        vMeth(i13);
        i13 = (int)Test.fFld;
        Test.instanceCount += i13;
        for (i14 = 21; i14 < 340; ++i14) {
            i15 += (((i14 * Test.fFld) + s1) - Test.instanceCount);
            for (i16 = 4; i16 < 79; ++i16) {
                for (i18 = 2; i14 < i18; i18--) {
                    iArrFld[i18][i18] = -8;
                    i17 -= i15;
                    Test.lArrFld[i14] = i15;
                    Test.instanceCount = (long)Test.fFld;
                    i13 += (13 + (i18 * i18));
                    if (Test.bFld) continue;
                    Test.fFld += 37657;
                    i13 = i20;
                    Test.bFld = Test.bFld;
                }
                for (i21 = 1; i21 < 2; i21++) {
                    if (Test.bFld) break;
                    if (Test.bFld) {
                        Test.fArrFld[i14 + 1] *= Test.instanceCount;
                        i22 = (int)Test.instanceCount;
                        i13 *= i16;
                        byArr[i14 - 1] *= (byte)Test.fFld;
                    } else {
                        i22 >>= (int)Test.instanceCount;
                    }
                    i15 = (int)Test.instanceCount;
                    Test.fFld -= 175L;
                    try {
                        iArrFld[i21 + 1][(i17 >>> 1) % N] = (i15 % 134243851);
                        i19 = (iArrFld[i14][i16] % 5500);
                        i17 = (i17 / 40778646);
                    } catch (ArithmeticException a_e) {}
                    i13 += i21;
                    Test.fFld += i21;
                    Test.instanceCount += (((i21 * Test.instanceCount) + i14) - i13);
                }
            }
        }

        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("s1 i16 i17 = " + s1 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 byArr = " + i21 + "," + i22 + "," + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.bFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.dFld iArrFld Test.lArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            FuzzerUtils.checkSum(iArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
