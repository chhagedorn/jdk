// Generated by Java* Fuzzer test generator (1.0.001). Sun Jul  9 02:29:03 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=4L;
    public static short sFld=-20905;
    public static double dFld=-2.36909;
    public float fFld=-2.650F;
    public byte byFld=-92;
    public int iFld=-60;
    public volatile int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -2.710F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i2, int i3) {

        int i4=-192, i5=19744, i6=0, i7=12381, i8=-101, i9=-19339, iArr[]=new int[N];
        double d=28.27463;
        long lArr[][]=new long[N][N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr, -8L);
        FuzzerUtils.init(fArr, 0.631F);
        FuzzerUtils.init(iArr, -10);

        i4 = 1;
        do {
            lArr[i4][i4 - 1] += i3;
            i3 += (int)d;
            for (i5 = i4; i5 < 4; ++i5) {
                for (i7 = 1; i4 < i7; i7--) {
                    lArr[i7 + 1][i5] >>= Test.sFld;
                    i8 = -25643;
                    fArr[i4] *= (float)42.37731;
                    i8 += i7;
                    i2 += Test.sFld;
                }
                lArr[i5 + 1][i4] = Test.instanceCount;
                i9 = 1;
                while ((i9 += 2) < 1) {
                    iArr = iArr;
                    iArr[i9 + 1] -= i8;
                    iArr[i9] = Test.sFld;
                }
            }
        } while (++i4 < 397);
        vMeth1_check_sum += i2 + i3 + i4 + Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + i9 +
            FuzzerUtils.checkSum(lArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr);
    }

    public int iMeth(int i1) {

        float f=81.694F;
        double d1=1.11391;
        int i10=51105, i11=-178, i12=13, i13=3, i14=2, i15=28, i16=-5, i17=208, iArr1[][]=new int[N][N];

        FuzzerUtils.init(iArr1, 136);

        Test.instanceCount = (long)f;
        vMeth1(i1, i1);
        i1 = i1;
        i1 = (int)d1;
        iArr1[(i1 >>> 1) % N][(-58447 >>> 1) % N] &= i1;
        for (i10 = 7; i10 < 271; ++i10) {
            Test.instanceCount += (i10 ^ i10);
            i1 = i1;
            i1 >>= (int)Test.instanceCount;
            for (i12 = 1; i12 < 6; i12++) {
                for (i14 = 1; i14 < 2; i14++) {
                    i15 = (int)Test.instanceCount;
                }
                for (i16 = i10; i16 < 2; i16++) {
                    iArr1[i12 - 1][i16] -= i17;
                    i17 += i11;
                }
            }
        }
        long meth_res = i1 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i10 + i11 + i12 + i13 + i14 + i15
            + i16 + i17 + FuzzerUtils.checkSum(iArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i=-5202, i18=35667, i19=32400;
        boolean bArr[]=new boolean[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(lArr1, 804730138L);

        i = 1;
        do {
            if (bArr[i - 1] & ((iMeth(i) - Test.dFld) != i)) break;
            switch ((i % 2) + 37) {
            case 37:
                for (i18 = i; i18 < 10; ++i18) {
                    fFld = i19;
                    i19 |= i19;
                    i19 = (int)-1701719001177420898L;
                    iArrFld[i] += (int)2783110935L;
                    fFld += i;
                    lArr1 = lArr1;
                }
                break;
            case 38:
                Test.instanceCount += (-12 + (i * i));
                i19 = (int)Test.instanceCount;
                i19 = i;
            }
            i19 = i;
        } while (++i < 154);
        i19 += -60799;
        vMeth_check_sum += i + i18 + i19 + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i21=-64535, i22=53982, i23=-136, i24=172, i25=3286, i26=7, i27=1, i28=10, i29=52, i30=-4053;
        long l=59364L;
        byte by=-19, byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)99);

        vMeth();
        i21 >>= Test.sFld;
        try {
            for (i22 = 3; i22 < 220; i22++) {
                Test.instanceCount += (i22 | i21);
            }
            i23 >>= i21;
            fFld -= i22;
            for (i24 = 2; i24 < 176; i24++) {
                Test.dFld = Test.dFld;
                for (i26 = 9; i26 < 144; ++i26) {
                    i27 += (int)fFld;
                    i27 |= i23;
                    for (l = 1; l < 2; l++) {
                        Test.dFld = -2;
                        i28 = i21;
                        Test.instanceCount -= byFld;
                        i28 += (int)l;
                        i28 = 0;
                        try {
                            i28 = (i24 / -14458);
                            iFld = (i23 % i24);
                            i27 = (20323 / iArrFld[i24 - 1]);
                        } catch (ArithmeticException a_e) {}
                        i28 += (int)(-2L + (l * l));
                        byFld *= (byte)i27;
                    }
                    i27 *= Test.sFld;
                    iFld -= i26;
                    i23 |= i22;
                    i21 += (-7452 + (i26 * i26));
                }
                i25 = i25;
                for (i29 = 4; i29 < 144; ++i29) {
                    Test.fArrFld[i24 - 1] *= Test.instanceCount;
                    i30 >>= i28;
                    Test.dFld += i28;
                }
            }
        }
        catch (NullPointerException exc1) {
            i28 -= by;
        }
        finally {
            byArr[(i22 >>> 1) % N] -= (byte)i28;
        }

        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 l i28 = " + i27 + "," + l + "," + i28);
        FuzzerUtils.out.println("i29 i30 by = " + i29 + "," + i30 + "," + by);
        FuzzerUtils.out.println("byArr = " + FuzzerUtils.checkSum(byArr));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.dFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("fFld byFld iFld = " + Float.floatToIntBits(fFld) + "," + byFld + "," + iFld);
        FuzzerUtils.out.println("iArrFld Test.fArrFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
