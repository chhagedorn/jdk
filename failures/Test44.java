// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 10 02:36:18 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=1876746918L;
    public static float fArrFld[]=new float[N];
    public static byte byArrFld[]=new byte[N];
    public static double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 0.433F);
        FuzzerUtils.init(Test.byArrFld, (byte)-100);
        FuzzerUtils.init(Test.dArrFld, -89.28534);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i3, long l, float f1) {

        boolean b=true;
        float f2=57.565F;
        int i4=-19347, iArr[]=new int[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)4803);
        FuzzerUtils.init(iArr, 7187);

        f1 = i3;
        for (short s : sArr) {
            switch (((i3 >>> 1) % 2) + 100) {
            case 100:
                switch ((((i3 >>> 1) % 7) * 5) + 59) {
                case 60:
                    i3 = i3;
                    b = b;
                    f1 -= i3;
                    iArr = iArr;
                    break;
                case 62:
                    for (f2 = 1; f2 < 4; f2++) {
                        if (b) {
                            i3 += (int)(((f2 * i4) + i4) - i4);
                            Test.fArrFld[(int)(f2)] = i3;
                            l -= i4;
                            sArr[(int)(f2 + 1)] = (short)i3;
                        } else {
                            i4 |= (int)l;
                        }
                    }
                    break;
                case 81:
                    i3 = i3;
                    break;
                case 63:
                    Test.instanceCount = 41544;
                    break;
                case 75:
                    i4 = i4;
                    break;
                case 76:
                    l >>= i3;
                    break;
                case 68:
                    s -= (short)i4;
                    break;
                }
                break;
            case 101:
                i4 -= i3;
                break;
            default:
                Test.byArrFld[(i4 >>> 1) % N] += (byte)l;
            }
        }
        long meth_res = i3 + l + Float.floatToIntBits(f1) + (b ? 1 : 0) + Float.floatToIntBits(f2) + i4 +
            FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i1=-152, i2=-8, i5=-7651, i6=-46935, i7=7286, i8=-42849, i9=-233, iArr1[]=new int[N];
        double d1=0.92605;
        float f3=2.102F;
        boolean b1=false;
        short sArr1[]=new short[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(sArr1, (short)1424);
        FuzzerUtils.init(lArr, -34926L);
        FuzzerUtils.init(iArr1, -17098);

        for (i1 = 8; 208 > i1; i1++) {
            d1 = iMeth(i2, Test.instanceCount, 0.921F);
            sArr1[i1 - 1] += (short)18;
            i5 = 1;
            while (++i5 < 8) {
                f3 *= i2;
                lArr[i5] = 25;
                i2 += i5;
            }
            i2 = i2;
            iArr1 = iArr1;
        }
        iArr1[(i5 >>> 1) % N] = i5;
        i6 >>= 202;
        Test.instanceCount <<= i7;
        for (i8 = 8; 222 > i8; i8++) {
            if (b1) continue;
            Test.byArrFld[i8 + 1] = (byte)i7;
        }
        vMeth1_check_sum += i1 + i2 + Double.doubleToLongBits(d1) + i5 + Float.floatToIntBits(f3) + i6 + i7 + i8 + i9 +
            (b1 ? 1 : 0) + FuzzerUtils.checkSum(sArr1) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(double d, float f, int i) {


        f = (float)(d--);
        vMeth1();
        Test.fArrFld[(i >>> 1) % N] += f;
        vMeth_check_sum += Double.doubleToLongBits(d) + Float.floatToIntBits(f) + i;
    }

    public void mainTest(String[] strArr1) {

        double d2=-2.28837;
        float f4=2.306F;
        int i10=42, i11=8294, i12=-7, i13=238, i14=-12, i15=171, i16=-158, i17=-8, i18=-9, i19=-5, iArr2[]=new int[N];
        short s1=858;
        boolean b2=true, bArr[]=new boolean[N];
        byte by=14;

        FuzzerUtils.init(iArr2, -57265);
        FuzzerUtils.init(bArr, false);

        vMeth(d2, f4, i10);
        switch (((i10 >>> 1) % 10) + 105) {
        case 105:
            i10 = i10;
            i10 &= (int)Test.instanceCount;
            i11 = 1;
            while (++i11 < 179) {
                i10 >>= i11;
                for (i12 = 1; 140 > i12; ++i12) {
                    i10 -= 42540;
                    Test.instanceCount += i11;
                    i10 = (int)Test.instanceCount;
                    f4 += (61381 + (i12 * i12));
                }
                i10 += (int)(-4767598168384677654L + (i11 * i11));
                iArr2[i11 + 1] <<= i11;
                s1 += (short)(((i11 * i12) + i13) - i11);
            }
            break;
        case 106:
            for (double d3 : Test.dArrFld) {
                for (i14 = 63; i14 > 2; --i14) {
                    switch ((i14 % 2) + 42) {
                    case 42:
                        for (i16 = i14; 2 > i16; ++i16) {
                            try {
                                i10 = (i13 / -196);
                                i13 = (iArr2[i16 - 1] % -1061051406);
                                i10 = (-39947 % i10);
                            } catch (ArithmeticException a_e) {}
                            Test.instanceCount |= Test.instanceCount;
                            i15 = i12;
                            i10 += i14;
                            if (b2) break;
                        }
                        break;
                    case 43:
                        i15 = i11;
                        break;
                    }
                    try {
                        i10 = (i13 / iArr2[i14 + 1]);
                        i17 = (i10 % i17);
                        iArr2[i14] = (iArr2[i14 - 1] / i15);
                    } catch (ArithmeticException a_e) {}
                    for (i18 = 1; 2 > i18; i18++) {
                        i13 += i18;
                        Test.instanceCount *= i15;
                        Test.byArrFld[i18] += (byte)-42259;
                        i13 -= (int)f4;
                    }
                }
            }
            break;
        case 107:
            d2 -= i19;
            break;
        case 108:
            i19 = (int)61173L;
            break;
        case 109:
            Test.instanceCount = i19;
        case 110:
            b2 = b2;
            break;
        case 111:
            bArr[(-32384 >>> 1) % N] = b2;
            break;
        case 112:
            i15 = i15;
            break;
        case 113:
            i17 -= (int)13.549F;
        case 114:
            i13 = by;
            break;
        }

        FuzzerUtils.out.println("d2 f4 i10 = " + Double.doubleToLongBits(d2) + "," + Float.floatToIntBits(f4) + "," +
            i10);
        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("s1 i14 i15 = " + s1 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 b2 = " + i16 + "," + i17 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i18 i19 by = " + i18 + "," + i19 + "," + by);
        FuzzerUtils.out.println("iArr2 bArr = " + FuzzerUtils.checkSum(iArr2) + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fArrFld Test.byArrFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(Test.byArrFld));
        FuzzerUtils.out.println("Test.dArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
