// Generated by Java* Fuzzer test generator (1.0.001). Fri Jul  7 10:32:01 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=3778443580001828534L;
    public static short sFld=17556;
    public long lFld=-406L;

    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, int i15, double d2) {

        int i16=127, i17=169, i18=31792, i19=-8, i20=-206, i21=-3, i22=-91, i23=49560, iArr1[]=new int[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 0.1001F);
        FuzzerUtils.init(iArr1, 54300);

        for (i16 = 17; i16 < 391; i16++) {
            for (i18 = 5; i18 > 1; --i18) {
                for (i20 = i18; i20 < 2; ++i20) {
                    fArr[i18 - 1] += i21;
                    i15 = -23875;
                }
                Test.instanceCount += i18;
                i19 = (int)l;
                i21 >>= i21;
                if (i17 != 0) {
                    vMeth1_check_sum += l + i15 + Double.doubleToLongBits(d2) + i16 + i17 + i18 + i19 + i20 + i21 + i22
                        + i23 + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
                    return;
                }
                d2 += i15;
                for (i22 = 2; i22 > 1; i22--) {
                    Test.instanceCount -= 97L;
                    i23 = i17;
                    Test.instanceCount <<= Test.instanceCount;
                }
            }
            iArr1[i16 - 1] -= -33;
        }
        vMeth1_check_sum += l + i15 + Double.doubleToLongBits(d2) + i16 + i17 + i18 + i19 + i20 + i21 + i22 + i23 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i11, byte by1, int i12) {

        double d1=0.63556;
        int i13=10, i14=6, i24=0, i25=22710, i26=34219, i27=116, i28=-54734;
        float f=64.250F;
        boolean b1=true;

        Test.sFld >>= (short)Test.instanceCount;
        i12 >>= (int)Test.instanceCount;
        for (d1 = 6; d1 < 230; ++d1) {
            i14 = 1;
            do {
                vMeth1(Test.instanceCount, i13, -2.115928);
            } while ((i14 += 2) < 7);
            i12 *= (int)Test.instanceCount;
            switch ((int)((d1 % 1) + 84)) {
            case 84:
                f = (float)d1;
            }
        }
        for (i24 = 297; 9 < i24; --i24) {
            if (b1) {
                i26 = 1;
                while (++i26 < 6) {
                    for (i27 = 1; i27 < 1; i27++) {
                        if (b1) continue;
                        if (i14 != 0) {
                            vMeth_check_sum += i11 + by1 + i12 + Double.doubleToLongBits(d1) + i13 + i14 +
                                Float.floatToIntBits(f) + i24 + i25 + i26 + i27 + i28 + (b1 ? 1 : 0);
                            return;
                        }
                        i28 += (i27 * i26);
                    }
                }
            } else {
                Test.instanceCount &= i13;
            }
        }
        vMeth_check_sum += i11 + by1 + i12 + Double.doubleToLongBits(d1) + i13 + i14 + Float.floatToIntBits(f) + i24 +
            i25 + i26 + i27 + i28 + (b1 ? 1 : 0);
    }

    public static byte byMeth(double d, int i7) {

        int i9=45622, i10=-118, i29=-11, i30=-10, iArr[]=new int[N];
        byte by2=-50;
        float f1=1.898F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -205);
        FuzzerUtils.init(lArr, 1992272970471721294L);

        for (int i8 : iArr) {
            for (i9 = 1; i9 < 4; ++i9) {
                vMeth(-3, by2, -8060);
                Test.instanceCount *= i9;
                i29 = 1;
                do {
                    f1 = f1;
                    iArr = iArr;
                    lArr[i9 + 1] += i7;
                    if (false) continue;
                } while (++i29 < 2);
                Test.instanceCount += 223;
                i10 = -39134;
                i30 = 1;
                while (++i30 < 2) {
                    iArr[i9] += i29;
                    Test.instanceCount = (long)47.490F;
                    Test.instanceCount <<= Test.instanceCount;
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i7 + i9 + i10 + by2 + i29 + Float.floatToIntBits(f1) + i30 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        short s=-1410, s1=20304;
        byte by=-86;
        int i=7, i1=220, i2=11, i3=114, i4=-59, i5=-76, i6=-7, iArr2[][]=new int[N][N];
        boolean b=true;
        double d3=69.131001, dArr[]=new double[N];
        float f2=-20.390F;
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr2, 2);
        FuzzerUtils.init(lArr1, 7899450292092371326L);
        FuzzerUtils.init(dArr, 1.86704);

        s -= (short)(by * Math.abs((int)(i - 107.119394)));
        for (i1 = 10; i1 < 199; i1 += 2) {
            for (i3 = i1; i3 < 266; ++i3) {
                for (i5 = 1; i5 > i1; i5 -= 2) {
                    if ((i4++) <= (Math.max(i1 - i2, i1 + i6) + ((-(i4 - i4)) + (Test.instanceCount - -6)))) break;
                    if (b && ((i4 += byMeth(d3, 114)) == f2)) break;
                    d3 += i3;
                    switch ((i3 % 2) + 53) {
                    case 53:
                        i4 >>>= (int)Test.instanceCount;
                        i >>>= i;
                        i6 >>>= i6;
                        break;
                    case 54:
                        i2 = i4;
                        Test.instanceCount = Test.instanceCount;
                        switch (((i5 % 10) * 5) + 41) {
                        case 58:
                            iArr2[i3 - 1][i3 - 1] = i3;
                            Test.instanceCount -= (long)f2;
                            i4 += i5;
                            i4 += (((i5 * f2) + Test.instanceCount) - i2);
                        case 69:
                            lArr1[i1] = i2;
                            break;
                        case 47:
                            Test.instanceCount = i1;
                        case 48:
                            if (b) break;
                            Test.instanceCount = i3;
                            break;
                        case 80:
                            Test.instanceCount -= i3;
                            lArr1[i5 - 1] <<= -1L;
                            break;
                        case 68:
                            if (b) {
                                lFld |= i5;
                                try {
                                    i = (iArr2[i3 - 1][i1 + 1] / -48944);
                                    iArr2[i3][i1] = (-164 % i);
                                    iArr2[i3 - 1][i5 - 1] = (i4 / 32691);
                                } catch (ArithmeticException a_e) {}
                                iArr2[i5 - 1][i3 - 1] >>= (int)lFld;
                                i2 += i5;
                            }
                            i += (((i5 * i1) + i) - i4);
                        case 66:
                            if (true) break;
                        case 55:
                            Test.instanceCount += i5;
                        case 45:
                            f2 += s1;
                            break;
                        case 78:
                            dArr[i1] = 20586;
                        }
                        break;
                    default:
                        iArr2[i1][i5 + 1] %= (int)(i3 | 1);
                    }
                }
            }
        }

        FuzzerUtils.out.println("s by i = " + s + "," + by + "," + i);
        FuzzerUtils.out.println("i1 i2 i3 = " + i1 + "," + i2 + "," + i3);
        FuzzerUtils.out.println("i4 i5 i6 = " + i4 + "," + i5 + "," + i6);
        FuzzerUtils.out.println("b d3 f2 = " + (b ? 1 : 0) + "," + Double.doubleToLongBits(d3) + "," +
            Float.floatToIntBits(f2));
        FuzzerUtils.out.println("s1 iArr2 lArr1 = " + s1 + "," + FuzzerUtils.checkSum(iArr2) + "," +
            FuzzerUtils.checkSum(lArr1));
        FuzzerUtils.out.println("dArr = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld lFld = " + Test.instanceCount + "," + Test.sFld + "," +
            lFld);

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
