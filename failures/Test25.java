// Generated by Java* Fuzzer test generator (1.0.001). Thu Jul  6 07:03:29 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=223L;
    public int iFld=0;
    public static boolean bFld=true;
    public static int iFld1=-72;
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -52871);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, long l2) {

        int i4=1, i5=-148, i6=-33085, i7=-1, i8=145, i9=-61972, i10=7472;

        Test.iArrFld[(i4 >>> 1) % N][(i4 >>> 1) % N] = (int)Test.instanceCount;
        i4 = i4;
        switch ((((62297 >>> 1) % 2) * 5) + 15) {
        case 21:
            i4 = i4;
            i4 = (int)l2;
            for (i5 = 11; i5 < 338; i5++) {
                l1 *= i4;
                for (i7 = 1; i7 < 5; ++i7) {
                    i6 += 132;
                    if (i6 != 0) {
                        vMeth2_check_sum += l1 + l2 + i4 + i5 + i6 + i7 + i8 + i9 + i10;
                        return;
                    }
                    i8 = i6;
                    for (i9 = 1; 2 > i9; i9++) {
                        i8 += (57 + (i9 * i9));
                        i4 = (int)l1;
                        l2 += (-3 + (i9 * i9));
                    }
                }
            }
            break;
        case 16:
            Test.iArrFld[(i4 >>> 1) % N][(i4 >>> 1) % N] >>>= i7;
            break;
        default:
            i10 /= (int)(i9 | 1);
        }
        vMeth2_check_sum += l1 + l2 + i4 + i5 + i6 + i7 + i8 + i9 + i10;
    }

    public static void vMeth1(long l, int i3, float f1) {

        int i11=145, i12=-12, i13=39243, i14=2363, i15=-196, i16=224, i17=-53996;
        double d=-1.7528;
        byte by=-8;
        short s=1594;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(bArr, true);

        vMeth2(l, l);
        for (i11 = 8; i11 < 187; i11++) {
            for (i13 = 1; i13 < 9; i13++) {
                for (d = 1; d < 2; ++d) {
                    i14 += (int)d;
                    l += (6711666331140998124L + (d * d));
                    Test.iArrFld[(int)(d + 1)][(i15 >>> 1) % N] *= i11;
                }
                for (i16 = 1; i16 < 2; i16++) {
                    double d1=1.3359;
                    Test.iArrFld[i11][i13] = i12;
                    Test.iArrFld[i16 + 1][i16 - 1] = by;
                    bArr[i11] = Test.bFld;
                    d1 = s;
                    i12 = (int)Test.instanceCount;
                }
                Test.bFld = Test.bFld;
                f1 = s;
            }
        }
        vMeth1_check_sum += l + i3 + Float.floatToIntBits(f1) + i11 + i12 + i13 + i14 + Double.doubleToLongBits(d) +
            i15 + i16 + i17 + by + s + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(int i1, float f, int i2) {

        long l3=-3L;
        int i18=-14451, i19=10, i20=28688, i21=27137, i22=174;
        double d2=1.65486;
        short s1=31303;

        vMeth1(Test.instanceCount, i2, f);
        i2 -= i2;
        i2 <<= (int)Test.instanceCount;
        for (l3 = 16; 363 > l3; l3++) {
            Test.instanceCount <<= 94;
            for (i19 = 1; i19 < 5; ++i19) {
                i2 *= (int)l3;
                i2 >>>= 13;
                d2 += f;
                Test.iArrFld[(int)(l3 + 1)][i19 + 1] += (int)d2;
            }
            i1 = (int)l3;
            i20 <<= (int)l3;
            for (i21 = 1; i21 < 5; ++i21) {
                i20 *= 8;
                Test.instanceCount *= s1;
            }
        }
        vMeth_check_sum += i1 + Float.floatToIntBits(f) + i2 + l3 + i18 + i19 + i20 + Double.doubleToLongBits(d2) + i21
            + i22 + s1;
    }

    public void mainTest(String[] strArr1) {

        int i=20214, i23=93, i24=-2, i25=13, i26=198, i27=31247, i28=-35978, i29=-842, i30=59144, i31=-31309, i32=-6;
        double d3=-100.24781;
        long l4=2L, l5=3L, lArr[]=new long[N];
        byte by1=7;

        FuzzerUtils.init(lArr, 3223073069L);

        switch ((((iFld >>> 1) % 3) * 5) + 44) {
        case 51:
            i = 195;
            do {
                float f2=23.231F;
                vMeth(i, f2, iFld);
                Test.instanceCount += iFld;
                iFld += i;
            } while ((i -= 3) > 0);
            i23 = 386;
            while (--i23 > 0) {
                for (i24 = 2; i24 < 65; i24++) {
                    iFld = iFld;
                    for (i26 = 1; i26 < 2; i26++) {
                        lArr[i24] = iFld;
                    }
                    Test.instanceCount >>= i25;
                    i25 = (int)d3;
                    i27 *= (int)Test.instanceCount;
                    l4 /= (i24 | 1);
                    try {
                        i25 = (Test.iArrFld[i23][i24] / -61054);
                        i25 = (191 % Test.iArrFld[i24 + 1][i24]);
                        iFld = (i / i27);
                    } catch (ArithmeticException a_e) {}
                    i25 = iFld;
                    iFld |= by1;
                }
                iFld -= i;
                for (l5 = 2; l5 < 65; ++l5) {
                    l4 += (l5 - i);
                    d3 -= i25;
                }
                for (i29 = i23; i29 < 65; ++i29) {
                    for (i31 = 1; i29 < i31; i31--) {
                        by1 = (byte)l4;
                        i32 -= (int)l5;
                        iFld >>= i27;
                        Test.iArrFld[i31 + 1][i29 + 1] -= 9;
                        Test.iArrFld[i23 - 1][i23] >>= i23;
                    }
                    i30 -= i26;
                    i27 += 20500;
                }
            }
        case 54:
            by1 -= (byte)i28;
            break;
        case 46:
            i32 = Test.iFld1;
            break;
        default:
            d3 *= l4;
        }

        FuzzerUtils.out.println("i i23 i24 = " + i + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("d3 l4 by1 = " + Double.doubleToLongBits(d3) + "," + l4 + "," + by1);
        FuzzerUtils.out.println("l5 i28 i29 = " + l5 + "," + i28 + "," + i29);
        FuzzerUtils.out.println("i30 i31 i32 = " + i30 + "," + i31 + "," + i32);
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.bFld = " + Test.instanceCount + "," + iFld + "," +
            (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.iFld1 Test.iArrFld = " + Test.iFld1 + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
