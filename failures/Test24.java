// Generated by Java* Fuzzer test generator (1.0.001). Thu Jul  6 03:42:25 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=30L;
    public static double dFld=-56.64496;
    public static volatile float fFld=-2.899F;
    public short sFld=6601;
    public long lFld=-123L;
    public static int iFld=2;
    public static long lArrFld[][]=new long[N][N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 32472L);
        FuzzerUtils.init(Test.iArrFld, 8);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static void vMeth(int i1, int i2, int i3) {


        Test.fFld -= -29984;
        vMeth_check_sum += i1 + i2 + i3;
    }

    public static long lMeth(double d) {

        int i5=-15228;

        vMeth(i5, i5, -2);
        long meth_res = Double.doubleToLongBits(d) + i5;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth() {

        int i4=169, i6=7, i7=64827, i8=-8, i9=46;
        short s=-634;
        boolean b=false;

        vMeth(i4, (int)(((i4 * 13) + Test.dFld) * (--Test.lArrFld[(i4 >>> 1) % N][(i4 >>> 1) % N])), (int)(((Test.fFld
            + Test.instanceCount) + (i4 - s)) - (i4 + lMeth(Test.dFld))));
        i6 = 1;
        while (++i6 < 237) {
            i7 = 1;
            do {
                Test.lArrFld[i7][i7 + 1] *= (long)Test.dFld;
                if (b) continue;
                i4 += (int)Test.instanceCount;
                b = b;
            } while (++i7 < 7);
            i4 = (int)1401618258L;
        }
        if (b) {
            for (i8 = 13; i8 < 225; ++i8) {
                i9 /= 12;
                i9 >>>= i8;
                i4 = i6;
                i4 -= 248;
                i4 *= i9;
            }
        } else {
            Test.iArrFld = Test.iArrFld;
        }
        long meth_res = i4 + s + i6 + i7 + (b ? 1 : 0) + i8 + i9;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=46696, i10=-70, i11=-30, i12=-13953, i13=-8, i14=-47355, i15=66;
        boolean b1=true;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 56.588F);

        fArr[(-5 >>> 1) % N] = (Long.reverseBytes(Math.min(Test.instanceCount, Test.instanceCount)) * ((i * 14) * i));
        Test.dFld -= i;
        iMeth();
        Test.instanceCount = sFld;
        i10 = 184;
        while (--i10 > 0) {
            Test.instanceCount /= (i | 1);
            i += (((i10 * i) + Test.instanceCount) - i10);
            i11 = 1;
            while (++i11 < 136) {
                Test.lArrFld[i10] = Test.lArrFld[i10];
                for (i12 = 1; i12 > i10; i12 -= 3) {
                    if (b1) break;
                    i -= -54;
                    Test.lArrFld[i10 + 1][i12 - 1] += i13;
                    i13 = i10;
                    i -= (int)Test.instanceCount;
                    i13 += i11;
                    i13 += (i12 * i12);
                }
                Test.dFld -= i10;
                i += i13;
                Test.instanceCount += (long)(11.530F + (i11 * i11));
                Test.lArrFld[i11 + 1][i10 + 1] += i13;
            }
            for (i14 = i10; i14 < 136; i14++) {
                Test.instanceCount += i10;
                i = (int)lFld;
                i13 = (int)Test.instanceCount;
                switch ((i14 % 5) + 82) {
                case 82:
                case 83:
                    sFld = (short)i15;
                    i13 -= (int)lFld;
                    i = Test.iFld;
                    Test.iFld += i14;
                    break;
                case 84:
                case 85:
                    lFld = Test.instanceCount;
                    break;
                case 86:
                    i >>>= i13;
                    break;
                default:
                    i13 += (((i14 * lFld) + Test.fFld) - i15);
                }
            }
        }

        FuzzerUtils.out.println("i i10 i11 = " + i + "," + i10 + "," + i11);
        FuzzerUtils.out.println("i12 i13 b1 = " + i12 + "," + i13 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i14 i15 fArr = " + i14 + "," + i15 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.dFld Test.fFld = " + Test.instanceCount + "," +
            Double.doubleToLongBits(Test.dFld) + "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("sFld lFld Test.iFld = " + sFld + "," + lFld + "," + Test.iFld);
        FuzzerUtils.out.println("Test.lArrFld Test.iArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest lMeth
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
