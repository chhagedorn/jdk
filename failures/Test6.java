// Generated by Java* Fuzzer test generator (1.0.001). Mon Jun 12 13:14:16 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=2L;
    public static int iFld=-32528;
    public static float fFld=-36.927F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 95);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i1=11, i2=-7776, i3=0, i4=212, i5=-106, i6=17707;
        float f3=100.422F;
        boolean b=false;
        long l1=36976L;
        short s=-28041, sArr1[]=new short[N];

        FuzzerUtils.init(sArr1, (short)14236);

        Test.instanceCount = 43;
        sArr1[(i1 >>> 1) % N] += (short)-12074;
        for (i2 = 1; i2 < 141; ++i2) {
            i1 *= (int)f3;
            i1 >>= i3;
            if (b) break;
            for (l1 = 1; l1 < 11; l1++) {
                i4 = (int)l1;
                for (i5 = 1; i5 < 2; ++i5) {
                    i6 = s;
                    s = (short)i1;
                    f3 += 1979442025L;
                }
                i1 += (int)(l1 * l1);
                i6 += (int)(l1 - i5);
                i6 += (int)(((l1 * f3) + i6) - i2);
            }
        }
        vMeth1_check_sum += i1 + i2 + i3 + Float.floatToIntBits(f3) + (b ? 1 : 0) + l1 + i4 + i5 + i6 + s +
            FuzzerUtils.checkSum(sArr1);
    }

    public static void vMeth(float f1, int i, float f2) {

        int i7=164, i8=87, i9=-61, i10=8, i11=38756, iArr[]=new int[N];
        boolean b1=false;
        short s1=-11339;
        float fArr[]=new float[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 3);
        FuzzerUtils.init(fArr, 15.428F);
        FuzzerUtils.init(lArr, 39998L);

        vMeth1();
        iArr[(i >>> 1) % N] -= i;
        f1 *= i;
        i7 = 380;
        while ((i7 -= 2) > 0) {
            for (i8 = 8; i8 > i7; i8 -= 2) {
                i9 += (i8 * i8);
                i += i8;
                for (i10 = i8; i10 < 1; ++i10) {
                    b1 = b1;
                    if (b1) {
                        fArr[i8 + 1] = Test.iFld;
                    }
                    s1 = (short)i10;
                    lArr[i8] = Test.instanceCount;
                    try {
                        i11 = (i % 169332046);
                        iArr[i8] = (i11 % i8);
                        iArr[i10 - 1] = (iArr[i10 - 1] / i8);
                    } catch (ArithmeticException a_e) {}
                    i += i10;
                }
            }
        }
        vMeth_check_sum += Float.floatToIntBits(f1) + i + Float.floatToIntBits(f2) + i7 + i8 + i9 + i10 + i11 + (b1 ? 1
            : 0) + s1 + FuzzerUtils.checkSum(iArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(lArr);
    }

    public static long lMeth(float f) {

        int i12=-5, i13=-52676;
        double d1=0.128851;
        byte by=-114;
        boolean b2=true;
        short s2=-26220;

        vMeth(f, 35, f);
        for (i12 = 9; 349 > i12; ++i12) {
            d1 += i13;
            i13 += (((i12 * f) + f) - Test.iFld);
            Test.iArrFld = Test.iArrFld;
            i13 *= (int)Test.instanceCount;
            Test.iFld -= i12;
            Test.iArrFld[i12 + 1] += (int)f;
            if (b2) {
                by >>>= (byte)i13;
                d1 = Test.instanceCount;
                i13 = i13;
            } else {
                Test.iFld = Test.iFld;
                s2 = (short)i12;
                i13 *= 0;
            }
        }
        long meth_res = Float.floatToIntBits(f) + i12 + i13 + Double.doubleToLongBits(d1) + by + (b2 ? 1 : 0) + s2;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        long l=2831872040L, lArr1[]=new long[N];
        double d=0.27734;
        int i14=7, i15=22640, i16=17390, i17=-208, i18=-46172, i19=-11854, i20=62427;
        boolean b3=false, bArr[]=new boolean[N];
        short s3=29927, sArr[]=new short[N];
        float fArr1[]=new float[N];

        FuzzerUtils.init(sArr, (short)-7675);
        FuzzerUtils.init(lArr1, 1974261480L);
        FuzzerUtils.init(fArr1, 1.915F);
        FuzzerUtils.init(bArr, false);

        l = (long)(((sArr[(-11 >>> 1) % N] += (short)d) - l) + lMeth(Test.fFld));
        lArr1[(Test.iFld >>> 1) % N] += (long)Test.fFld;
        for (i14 = 17; i14 < 303; ++i14) {
            if (b3) {
                i15 += (i14 * i14);
                for (i16 = 5; i16 < 88; ++i16) {
                    i15 <<= Test.iFld;
                    Test.instanceCount -= l;
                    Test.iFld |= i14;
                    d += l;
                    Test.iFld ^= i15;
                    i18 = 1;
                    do {
                        i17 -= (int)Test.instanceCount;
                        Test.iFld >>= (int)l;
                        Test.iFld += i18;
                        lArr1[i14 + 1] >>= Test.instanceCount;
                        i17 = (int)l;
                    } while (++i18 < 2);
                    Test.iArrFld[i14 - 1] += (int)Test.instanceCount;
                    fArr1[i14 + 1] = i15;
                    for (i19 = 1; i19 < 2; ++i19) {
                        if (b3) {
                        } else {
                            i17 -= i18;
                            i15 = (int)Test.instanceCount;
                            s3 = s3;
                            b3 = b3;
                        }
                        bArr[i19 + 1] = b3;
                        if (true) {
                            Test.iFld += (((i19 * i20) + i18) - i19);
                        } else if (b3) {
                            i17 += i16;
                            i20 = i19;
                        } else if (b3) {
                            try {
                                Test.iFld = (i17 / -4817);
                                Test.iFld = (Test.iFld % -24360);
                                i15 = (i20 % 2035218849);
                            } catch (ArithmeticException a_e) {}
                        }
                    }
                }
            }
        }

        FuzzerUtils.out.println("l d i14 = " + l + "," + Double.doubleToLongBits(d) + "," + i14);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("b3 s3 sArr = " + (b3 ? 1 : 0) + "," + s3 + "," + FuzzerUtils.checkSum(sArr));
        FuzzerUtils.out.println("lArr1 fArr1 bArr = " + FuzzerUtils.checkSum(lArr1) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + "," + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
