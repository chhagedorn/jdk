// Generated by Java* Fuzzer test generator (1.0.001). Thu Jul  6 01:09:49 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-1710168587L;
    public static long lFld=14L;
    public static float fFld=0.923F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 11);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(boolean b, long l) {

        int i2=-125, i3=-15403, i4=3, i5=46191, i6=-10, i7=-35730, i8=240, iArr1[]=new int[N];
        float f1=-2.601F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -147);
        FuzzerUtils.init(lArr, 48764L);

        iArr1 = iArr1;
        i2 = i2;
        i2 >>= i2;
        Test.instanceCount = i2;
        lArr[(i2 >>> 1) % N] = i2;
        for (i3 = 9; i3 < 361; i3++) {
            i2 += (((i3 * i2) + f1) - i4);
            i4 >>>= i4;
            Test.lFld = (long)-93.326F;
            for (i5 = i3; i5 < 5; ++i5) {
                b = b;
                for (i7 = i5; i7 < 1; ++i7) {
                    Test.instanceCount = i5;
                    i2 <<= 59806;
                    Test.instanceCount += l;
                }
            }
        }
        vMeth1_check_sum += (b ? 1 : 0) + l + i2 + i3 + i4 + Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i1) {

        boolean b1=false;
        float f2=-98.585F;
        int iArr[]=new int[N];

        FuzzerUtils.init(iArr, -9);

        iArr[(i1 >>> 1) % N] = i1;
        vMeth1(b1, Test.lFld);
        i1 -= (int)f2;
        i1 = i1;
        vMeth_check_sum += i1 + (b1 ? 1 : 0) + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr);
    }

    public static void vSmallMeth(byte by, float f, int i) {


        vMeth(i);
        vSmallMeth_check_sum += by + Float.floatToIntBits(f) + i;
    }

    public void mainTest(String[] strArr1) {

        byte by1=119;
        int i9=-241, i10=64108, i11=-21, i12=15, i13=11, i14=8120, i15=-51221, i16=184, i17=-26257, i18=30754, i19=90;
        boolean b2=true;
        short s=-4058, sArr[][]=new short[N][N];
        double d=0.117084;
        float fArr[]=new float[N];

        FuzzerUtils.init(sArr, (short)-31339);
        FuzzerUtils.init(fArr, 1.425F);

        for (int smallinvoc=0; smallinvoc<290; smallinvoc++) vSmallMeth(by1, Test.fFld, i9);
        for (i10 = 3; i10 < 143; ++i10) {
            i9 += (int)Test.instanceCount;
            Test.instanceCount += (50106 + (i10 * i10));
            i11 += (i10 - i9);
            for (i12 = 4; i12 < 179; i12++) {
                for (i14 = 2; i14 > i10; i14--) {
                    sArr[i14][i10] -= (short)i10;
                    i13 -= i12;
                    Test.iArrFld[i10] *= (int)Test.fFld;
                    Test.fFld += 64005;
                    b2 = b2;
                }
                s += (short)(i12 - Test.lFld);
                i11 *= i13;
                for (i16 = 1; i16 < 2; ++i16) {
                    by1 *= (byte)i11;
                    i13 -= i12;
                    Test.iArrFld[i16] = i11;
                    b2 = true;
                    i9 -= i9;
                    i11 |= i11;
                    b2 = b2;
                    i13 /= (int)(i13 | 1);
                    Test.lFld += (-11730 + (i16 * i16));
                    Test.iArrFld[i10 + 1] += i14;
                }
                fArr[i12] *= Test.instanceCount;
                i15 -= (int)d;
                for (i18 = 1; i18 < 2; i18++) {
                    i17 = -2;
                    i9 += i13;
                }
            }
        }

        FuzzerUtils.out.println("by1 i9 i10 = " + by1 + "," + i9 + "," + i10);
        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 i15 b2 = " + i14 + "," + i15 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("s i16 i17 = " + s + "," + i16 + "," + i17);
        FuzzerUtils.out.println("d i18 i19 = " + Double.doubleToLongBits(d) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("sArr fArr = " + FuzzerUtils.checkSum(sArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.lFld Test.fFld = " + Test.instanceCount + "," + Test.lFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
