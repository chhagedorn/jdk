// Generated by Java* Fuzzer test generator (1.0.001). Fri May 19 08:57:31 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=56354L;
    public int iFld=-45047;
    public static float fFld=2.280F;
    public static byte byFld=-37;
    public static short sFld=17003;
    public static float fArrFld[]=new float[N];
    public static int iArrFld[][]=new int[N][N];
    public int iArrFld1[]=new int[N];
    public int iArrFld2[]=new int[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 91.982F);
        FuzzerUtils.init(Test.iArrFld, -11);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i2=2, i3=-27, i4=-34, i5=119, i6=201, i7=-80, i8=92, iArr[][]=new int[N][N];
        long l1=360396226L;
        double d=-1.54319, d1=2.85303;
        float f1=0.249F;

        FuzzerUtils.init(iArr, -2);

        i2 = (int)Test.instanceCount;
        i2 += i2;
        i2 = i2;
        for (i3 = 2; i3 < 270; ++i3) {
            for (l1 = i3; l1 < 6; l1++) {
                d -= f1;
                i2 += i4;
            }
            for (d1 = 1; d1 < 6; d1++) {
                i4 = i4;
            }
            i4 = i5;
        }
        for (i7 = 122; 5 < i7; i7--) {
            byte by=-41;
            i8 >>= (int)9L;
            i4 += (int)l1;
            i5 += (((i7 * f1) + by) - i4);
            iArr[i7 + 1][i7 + 1] = by;
        }
        long meth_res = i2 + i3 + i4 + l1 + i5 + Double.doubleToLongBits(d) + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(d1) + i6 + i7 + i8 + FuzzerUtils.checkSum(iArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth(float f, int i1) {


        lMeth();
        vMeth_check_sum += Float.floatToIntBits(f) + i1;
    }

    public static int iMeth(int i, long l, boolean b) {

        int i9=32273;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 10L);

        vMeth(Test.fFld, i);
        try {
            lArr = FuzzerUtils.long1array(N, (long)-24L);
        }
        catch (NullPointerException exc2) {
            lArr[(-10 >>> 1) % N] = i;
            i ^= (int)l;
            i9 = 1;
            while (++i9 < 226) {
                Test.fFld = Test.instanceCount;
            }
        }
        long meth_res = i + l + (b ? 1 : 0) + i9 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        boolean b1=false, b2=false;
        int i10=58313, i11=-172, i12=-146, i13=13444, i14=-1, i15=-144, i16=180, i17=-31363, i18=-42888;
        float f2=0.416F;

        try {
            iFld = (iFld * iMeth(iFld, Test.instanceCount, b1));
            for (i10 = 361; i10 > 4; i10--) {
                Test.fArrFld = Test.fArrFld;
                i11 -= (int)Test.instanceCount;
                for (i12 = 2; 71 > i12; i12++) {
                    try {
                        i13 = (Test.iArrFld[i10 + 1][i10] % i13);
                        Test.iArrFld[i12 + 1][i10] = (56491 % Test.iArrFld[i12 + 1][i12]);
                        iFld = (i11 / -122);
                    } catch (ArithmeticException a_e) {}
                    iArrFld1[i10 + 1] += (int)Test.fFld;
                    for (i14 = 1; 2 > i14; ++i14) {
                        i13 = i11;
                        Test.instanceCount /= (Test.byFld | 1);
                    }
                    i13 += i13;
                    Test.byFld = (byte)i13;
                    iFld -= (int)Test.instanceCount;
                    i15 += (int)-1880758130464841913L;
                    if (b2) {
                        try {
                            i15 = (i11 % -26344);
                            i15 = (i10 % 136);
                            i11 = (-9756 / iFld);
                        } catch (ArithmeticException a_e) {}
                        for (i16 = 2; i16 > i10; i16--) {
                            Test.sFld *= (short)i11;
                            Test.iArrFld[i16][i16] -= (int)Test.instanceCount;
                            Test.fFld *= Test.byFld;
                            i13 += i16;
                            Test.byFld *= (byte)Test.sFld;
                        }
                        Test.sFld = (short)Test.instanceCount;
                    }
                    iArrFld2[i10 + 1] = (int)Test.instanceCount;
                }
                i11 = (int)Test.fFld;
                i15 += i10;
            }
            for (f2 = 3; f2 < 124; ++f2) {
                i13 = (int)Test.instanceCount;
                if (b1) break;
            }
        }
        catch (NegativeArraySizeException exc3) {
            i13 <<= i14;
        }
        finally {
            i18 -= iFld;
        }

        FuzzerUtils.out.println("b1 i10 i11 = " + (b1 ? 1 : 0) + "," + i10 + "," + i11);
        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("b2 f2 i18 = " + (b2 ? 1 : 0) + "," + Float.floatToIntBits(f2) + "," + i18);

        FuzzerUtils.out.println("Test.instanceCount iFld Test.fFld = " + Test.instanceCount + "," + iFld + "," +
            Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.byFld Test.sFld Test.fArrFld = " + Test.byFld + "," + Test.sFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.iArrFld iArrFld1 iArrFld2 = " + FuzzerUtils.checkSum(Test.iArrFld) + "," +
            FuzzerUtils.checkSum(iArrFld1) + "," + FuzzerUtils.checkSum(iArrFld2));

        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
