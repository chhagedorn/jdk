// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 15 14:52:31 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-54575L;
    public volatile int iFld=-27101;
    public static int iFld1=-7;
    public static double dFld=-42.323;
    public static byte byFld=113;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -7L);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i2) {

        int i3=6239, i4=10683, i5=-1341, i6=-139, i7=-12, iArr3[]=new int[N];
        float f1=-72.956F;
        short s1=25384;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr3, 4);
        FuzzerUtils.init(lArr, 4086266035L);

        i3 = 1;
        do {
            f1 -= Test.instanceCount;
            for (i4 = i3; i4 < 8; ++i4) {
                i5 += (i4 - i3);
                for (i6 = 1; i3 < i6; i6 -= 2) {
                    Test.iFld1 = i7;
                    switch (((i6 % 1) * 5) + 18) {
                    case 22:
                        iArr3 = iArr3;
                        break;
                    }
                    Test.instanceCount = (long)Test.dFld;
                    iArr3[i3 - 1] >>= i2;
                    i7 = i4;
                    iArr3[i6 + 1] += (int)f1;
                    i2 = i7;
                    s1 = (short)i3;
                }
                lArr[i4] = Test.instanceCount;
            }
        } while (++i3 < 192);
        vMeth1_check_sum += i2 + i3 + Float.floatToIntBits(f1) + i4 + i5 + i6 + i7 + s1 + FuzzerUtils.checkSum(iArr3) +
            FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(double d, long l, float f) {

        short s=-22850;
        int i=-62814, i1=-147, i8=-18813, iArr2[][]=new int[N][N];
        long l1=12L;
        boolean b=true;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr2, 7);
        FuzzerUtils.init(fArr, 0.907F);

        iArr2[(Test.iFld1 >>> 1) % N][(Test.iFld1 >>> 1) % N] = (int)(((Test.iFld1 + 1.62456) - Short.reverseBytes(s))
            - i);
        i1 = 1;
        while ((i1 += 3) < 242) {
            vMeth1(-36947);
            Test.dFld *= s;
            iArr2[i1 - 1][i1] -= i1;
            Test.iFld1 += i1;
            fArr[i1 + 1] -= (float)d;
            for (l1 = i1; 19 > l1; ++l1) {
                s -= (short)i;
                d += Test.iFld1;
                Test.byFld += (byte)38258;
                Test.dFld = f;
                i = 21;
                b = b;
            }
            i8 += (i1 + i1);
        }
        long meth_res = Double.doubleToLongBits(d) + l + Float.floatToIntBits(f) + s + i + i1 + l1 + i8 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        float f2=0.953F, f3=2.784F;
        int i9=-66, i10=13, i11=-46, iArr1[]=new int[N];
        boolean b1=true;
        short s2=10869;

        FuzzerUtils.init(iArr1, -12);

        iArr1[(Test.iFld1 >>> 1) % N] += ((iArr1[(Test.iFld1 >>> 1) % N]++) * ((--Test.iFld1) - iMeth(Test.dFld,
            Test.instanceCount, 51.584F)));
        for (f2 = 5; 143 > f2; f2++) {
            for (i10 = 1; i10 < 11; i10++) {
                iArr1[(int)(f2 + 1)] += Test.iFld1;
                if (b1) break;
                i9 *= (int)Test.instanceCount;
                i11 -= Test.iFld1;
                Test.instanceCount ^= Test.instanceCount;
                Test.instanceCount = i10;
            }
            Test.lArrFld[(int)(f2)] <<= 0;
            iArr1[(int)(f2 - 1)] = s2;
            Test.iFld1 *= i9;
            f3 -= Test.instanceCount;
        }
        i11 = i10;
        iArr1[(i11 >>> 1) % N] = -35297;
        vMeth_check_sum += Float.floatToIntBits(f2) + i9 + i10 + i11 + (b1 ? 1 : 0) + s2 + Float.floatToIntBits(f3) +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int iArr[]=new int[N];

        FuzzerUtils.init(iArr, 127);

        iArr[(iFld >>> 1) % N] ^= (iFld++);
        vMeth();
        iFld = Test.iFld1;
        Test.instanceCount = iFld;
        Test.iFld1 += iFld;

        FuzzerUtils.out.println("iArr = " + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.iFld1 = " + Test.instanceCount + "," + iFld + "," +
            Test.iFld1);
        FuzzerUtils.out.println("Test.dFld Test.byFld Test.lArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            Test.byFld + "," + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
