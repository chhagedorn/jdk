// Generated by Java* Fuzzer test generator (1.0.001). Tue May  9 17:23:01 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=57259L;
    public static boolean bFld=false;
    public double dFld=0.116423;
    public byte byFld=-1;
    public static double dArrFld[]=new double[N];
    public static float fArrFld[][]=new float[N][N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.dArrFld, -41.106390);
        FuzzerUtils.init(Test.fArrFld, -104.185F);
    }

    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l, int i5, float f) {

        double d=-2.26031;
        int i6=39, i7=-1, iArr[]=new int[N];
        long l1=207L, lArr[]=new long[N];
        short s=16287;
        byte by=58;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, -49.414F);
        FuzzerUtils.init(iArr, -45628);
        FuzzerUtils.init(lArr, 162L);

        d += Test.instanceCount;
        i6 = 1;
        while (++i6 < 129) {
            switch (((i6 % 7) * 5) + 84) {
            case 106:
                i5 -= (int)2364304153L;
                fArr[i6 + 1] *= i5;
                for (l1 = i6; l1 < 12; ++l1) {
                    i7 += (int)f;
                    fArr = fArr;
                    d -= i7;
                    Test.instanceCount -= -7;
                    i7 += (123 + (l1 * l1));
                    switch (i6 + 31) {
                    case 31:
                        Test.dArrFld[(int)(l1 - 1)] -= i5;
                        break;
                    case 32:
                        i5 *= i6;
                        Test.instanceCount += i5;
                        break;
                    case 33:
                        Test.instanceCount += l;
                        break;
                    case 34:
                        Test.bFld = Test.bFld;
                        break;
                    case 35:
                        i7 = i7;
                        break;
                    case 36:
                        d += Test.instanceCount;
                        break;
                    case 37:
                        try {
                            i5 = (150 % i5);
                            i7 = (i6 / -1536215248);
                            i5 = (i5 / -39714);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 38:
                        i7 += i7;
                        break;
                    case 39:
                        Test.bFld = Test.bFld;
                        break;
                    case 40:
                        i7 >>= i5;
                    case 41:
                        f -= i6;
                        break;
                    case 42:
                        l *= -32;
                        break;
                    case 43:
                        if (true) continue;
                        break;
                    case 44:
                        i7 = s;
                        break;
                    case 45:
                        if (Test.bFld) continue;
                        break;
                    case 46:
                        try {
                            i5 = (-21940 / i5);
                            i7 = (i5 % 57243);
                            i5 = (i6 / i6);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 47:
                        iArr[(int)(l1 - 1)] = 32248;
                    case 48:
                        iArr[(int)(l1 - 1)] = i6;
                        break;
                    case 49:
                        lArr[(int)(l1 + 1)] = i6;
                        break;
                    case 50:
                        f -= 0.884F;
                    case 51:
                        if (Test.bFld) continue;
                        break;
                    case 52:
                        i5 += (int)(l1 * l1);
                        break;
                    case 53:
                        if (i5 != 0) {
                            vMeth1_check_sum += l + i5 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i6 + l1
                                + i7 + s + by + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                                FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
                            return;
                        }
                        break;
                    case 54:
                        if (i6 != 0) {
                            vMeth1_check_sum += l + i5 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i6 + l1
                                + i7 + s + by + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                                FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
                            return;
                        }
                        break;
                    case 55:
                        iArr[i6 - 1] = (int)f;
                        break;
                    case 56:
                        f += s;
                        break;
                    case 57:
                        i5 += i7;
                        break;
                    case 58:
                        i7 += (int)(l1 * i5);
                        break;
                    case 59:
                        i5 = i5;
                    case 60:
                        l = i6;
                        break;
                    case 61:
                        f += i7;
                        break;
                    case 62:
                        i5 = 158;
                        break;
                    case 63:
                        f -= i7;
                        break;
                    case 64:
                        i7 = (int)173L;
                        break;
                    case 65:
                        i7 ^= i7;
                        break;
                    case 66:
                        i5 = i6;
                        break;
                    case 67:
                        Test.dArrFld[(int)(l1)] -= l1;
                        break;
                    case 68:
                        i5 = (int)l;
                        break;
                    case 69:
                        i7 += (int)(((l1 * by) + l) - Test.instanceCount);
                        break;
                    case 70:
                        Test.instanceCount += (l1 * l1);
                        break;
                    case 71:
                        i5 += (18024 + (l1 * l1));
                        break;
                    case 72:
                        by |= (byte)i7;
                    case 73:
                    case 74:
                        i5 += (int)l1;
                    case 75:
                        if (i7 != 0) {
                            vMeth1_check_sum += l + i5 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i6 + l1
                                + i7 + s + by + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
                                FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
                            return;
                        }
                        break;
                    case 76:
                        f -= i6;
                        break;
                    case 77:
                        d /= (l1 | 1);
                    case 78:
                        l <<= i7;
                    case 79:
                        i5 *= (int)l1;
                        break;
                    case 80:
                        i7 += (int)(((l1 * i6) + f) - i5);
                        break;
                    case 81:
                        i7 += (int)(l1 * l1);
                        break;
                    case 82:
                        Test.instanceCount = Test.instanceCount;
                        break;
                    case 83:
                        f = f;
                        break;
                    case 84:
                        s = (short)l;
                        break;
                    case 85:
                        Test.bFld = false;
                        break;
                    case 86:
                        l = i5;
                    case 87:
                        d += -24125;
                        break;
                    case 88:
                        i5 >>= i6;
                        break;
                    case 89:
                        i7 ^= i6;
                        break;
                    case 90:
                        l += i5;
                    case 91:
                        i7 = (int)l;
                        break;
                    case 92:
                        i7 <<= i5;
                    case 93:
                        s += (short)l1;
                        break;
                    case 94:
                        i5 = (int)d;
                        break;
                    case 95:
                        l ^= i6;
                        break;
                    case 96:
                        d -= i6;
                        break;
                    case 97:
                        f += (l1 * i5);
                        break;
                    case 98:
                        Test.instanceCount -= -8137845049734974970L;
                        break;
                    case 99:
                        d *= i5;
                    case 100:
                        i7 += i6;
                        break;
                    default:
                        i7 -= (int)d;
                    }
                }
                break;
            case 95:
            case 89:
                d = d;
            case 100:
                i7 = i6;
            case 96:
                if (Test.bFld) continue;
            case 113:
                f = i6;
                break;
            case 87:
                if (Test.bFld) continue;
            default:
                d -= i5;
            }
        }
        vMeth1_check_sum += l + i5 + Float.floatToIntBits(f) + Double.doubleToLongBits(d) + i6 + l1 + i7 + s + by +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public static double dMeth() {

        int i8=10029, i9=-128, i10=-29481, i11=-8047, iArr1[]=new int[N];
        float f1=-2.874F;
        double d1=0.7821;
        byte by1=-33;

        FuzzerUtils.init(iArr1, 4);

        vMeth1(0L, i8, f1);
        i8 >>= i8;
        iArr1[(i8 >>> 1) % N] = (int)57.85245;
        i9 = 1;
        while (++i9 < 218) {
            for (d1 = i9; d1 < 7; d1++) {
                i8 ^= (int)Test.instanceCount;
            }
            i11 = 1;
            while (++i11 < 7) {
                switch (((i10 >>> 1) % 2) + 123) {
                case 123:
                    f1 -= Test.instanceCount;
                    f1 += i10;
                    i10 -= i10;
                    i8 += i10;
                    break;
                case 124:
                    i10 = i9;
                    i8 *= (int)Test.instanceCount;
                    Test.fArrFld[i9][i11 + 1] -= by1;
                    break;
                default:
                    i10 <<= i10;
                }
            }
        }
        long meth_res = i8 + Float.floatToIntBits(f1) + i9 + Double.doubleToLongBits(d1) + i10 + i11 + by1 +
            FuzzerUtils.checkSum(iArr1);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(int i) {

        int i1=-15479, i2=-44, i3=10, i4=35415, i12=-202, i13=-154, iArr2[]=new int[N];
        float f2=2.480F;

        FuzzerUtils.init(iArr2, -51);

        for (i1 = 2; i1 < 384; i1++) {
            i -= (int)(i -= (int)(i2 = (int)(Test.instanceCount + 133)));
            for (i3 = 1; i3 < 4; ++i3) {
                Test.instanceCount -= Test.instanceCount;
                i4 *= (int)((i + dMeth()) - -56);
                i -= 146;
                i <<= (int)Test.instanceCount;
                Test.instanceCount = i1;
            }
            for (i12 = 1; i12 < 4; ++i12) {
                boolean b=true;
                if (Test.bFld) {
                    if (true) break;
                } else if (b) {
                    f2 = i2;
                    Test.instanceCount = i;
                } else {
                    Test.instanceCount = 10;
                    iArr2[i12 - 1] -= i12;
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i12 + i13 + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i14=-173, i16=54, i17=22618, i18=2, i19=-13, i21=-35118, i22=43673, i23=-15258, iArr3[][]=new int[N][N],
            iArr4[]=new int[N];
        float f3=52.986F;
        short s1=-22347;

        FuzzerUtils.init(iArr3, -133);
        FuzzerUtils.init(iArr4, -2433);

        vMeth(i14);
        for (long l2 : lArrFld) {
            f3 = i14;
            iArr3[(i14 >>> 1) % N][(i14 >>> 1) % N] *= i14;
            Test.instanceCount >>= i14;
            iArr3[(i14 >>> 1) % N][(i14 >>> 1) % N] = (int)dFld;
        }
        i14 *= i14;
        for (int i15 : iArr4) {
            for (i16 = 1; i16 < 63; ++i16) {
                for (i18 = 2; i18 > i16; --i18) {
                    int i20=-13;
                    i17 = i15;
                    i19 *= i19;
                    Test.fArrFld[i18][i16 - 1] = i15;
                    i14 <<= i17;
                    i17 = i20;
                    if (Test.bFld) {
                        i15 = i14;
                        i14 = i14;
                    } else if (Test.bFld) {
                        i19 = i20;
                        i20 = (int)1.109F;
                    }
                    byFld += (byte)i15;
                }
                s1 += (short)(i16 * f3);
                i14 >>= (int)49453L;
                i17 = i15;
            }
            i21 = 1;
            do {
                f3 = i16;
            } while (++i21 < 63);
            for (i22 = 2; i22 < 63; i22++) {
                i17 *= (int)-126.113546;
                Test.instanceCount = i17;
                Test.instanceCount = i19;
            }
        }

        FuzzerUtils.out.println("i14 f3 i16 = " + i14 + "," + Float.floatToIntBits(f3) + "," + i16);
        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("s1 i21 i22 = " + s1 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 iArr3 iArr4 = " + i23 + "," + FuzzerUtils.checkSum(iArr3) + "," +
            FuzzerUtils.checkSum(iArr4));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld dFld = " + Test.instanceCount + "," + (Test.bFld ? 1 : 0)
            + "," + Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("byFld Test.dArrFld Test.fArrFld = " + byFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 dMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
