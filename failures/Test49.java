// Generated by Java* Fuzzer test generator (1.0.001). Sat Aug 26 06:19:39 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-40655L;
    public static short sFld=-24092;
    public static float fFld=1.320F;
    public static boolean bArrFld[][]=new boolean[N][N];
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];
    public double dArrFld[][]=new double[N][N];
    public static byte byArrFld[][]=new byte[N][N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
        FuzzerUtils.init(Test.iArrFld, 31394);
        FuzzerUtils.init(Test.fArrFld, 0.358F);
        FuzzerUtils.init(Test.byArrFld, (byte)-39);
    }

    public static long iMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f, int i6, int i7) {

        byte by=59;
        int i8=18048, i9=-7290, i10=3, i11=4, iArr[]=new int[N];
        long l=-213L;

        FuzzerUtils.init(iArr, -14);

        i7 = i7;
        f = by;
        switch ((((-34915 >>> 1) % 8) * 5) + 82) {
        case 87:
            for (i8 = 12; i8 < 202; ++i8) {
                for (i10 = 8; i10 > i8; i10 -= 2) {
                    Test.instanceCount = 169;
                    i7 = i6;
                    i7 += i10;
                    l = 1;
                    do {
                        f += l;
                        iArr[(int)(l - 1)] = 6343;
                        i7 += (int)f;
                        i7 >>= i7;
                        if (i6 != 0) {
                            vMeth1_check_sum += Float.floatToIntBits(f) + i6 + i7 + by + i8 + i9 + i10 + i11 + l +
                                FuzzerUtils.checkSum(iArr);
                            return;
                        }
                        i7 |= (int)4L;
                        i11 -= i10;
                        iArr = iArr;
                        Test.bArrFld[i10][i10] = false;
                        Test.instanceCount = (long)82.69714;
                        Test.instanceCount += (l | i11);
                    } while (++l < 1);
                }
            }
        case 103:
            Test.instanceCount = -8;
            break;
        case 120:
            f += Test.sFld;
        case 112:
            Test.bArrFld[(-17642 >>> 1) % N] = FuzzerUtils.boolean1array(N, (boolean)false);
        case 109:
        case 83:
        case 115:
            f *= f;
        case 102:
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i6 + i7 + by + i8 + i9 + i10 + i11 + l +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth(double d) {

        int i4=5, i5=4037, i12=-1, i13=3;
        float f1=0.689F;
        byte by1=-98;
        double d1=58.115194, dArr[]=new double[N];
        boolean b=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -54138L);
        FuzzerUtils.init(dArr, 73.126444);

        for (i4 = 10; i4 < 320; i4++) {
            vMeth1(f1, i5, i5);
            lArr[i4 + 1] -= i5;
            i5 |= (int)Test.instanceCount;
            Test.iArrFld[i4] = (int)Test.instanceCount;
            for (i12 = 5; i12 > i4; i12 -= 2) {
                switch ((i4 % 4) + 119) {
                case 119:
                    Test.instanceCount = i13;
                    Test.iArrFld[(i4 >>> 1) % N] -= i12;
                    Test.fArrFld[i12] -= i12;
                    if (i4 != 0) {
                        vMeth_check_sum += Double.doubleToLongBits(d) + i4 + i5 + Float.floatToIntBits(f1) + i12 + i13
                            + by1 + Double.doubleToLongBits(d1) + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
                            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                        return;
                    }
                    break;
                case 120:
                    by1 >>= (byte)-120L;
                    break;
                case 121:
                    i5 >>= i4;
                    i13 *= i12;
                    d1 = 1;
                    while (++d1 < 1) {
                        d += -4;
                        dArr = dArr;
                        d *= Test.instanceCount;
                        if (b) continue;
                    }
                    Test.iArrFld[i12] *= i5;
                    break;
                case 122:
                    Test.iArrFld[(i13 >>> 1) % N] >>= i5;
                    break;
                }
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i4 + i5 + Float.floatToIntBits(f1) + i12 + i13 + by1 +
            Double.doubleToLongBits(d1) + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static float fMeth() {

        int i2=23305, i3=-11, i14=14871, i15=0, i16=-5, i17=-24876, i18=-43410, i19=-5;
        double d2=2.120677;
        byte by2=-109;
        boolean b1=true;

        for (i2 = 5; i2 < 218; ++i2) {
            vMeth(d2);
        }
        for (i14 = 129; i14 > 8; i14 -= 3) {
            by2 -= (byte)Test.instanceCount;
        }
        i15 *= (int)Test.fFld;
        Test.instanceCount -= i14;
        i16 = 1;
        do {
            i17 = 1;
            while (++i17 < 6) {
                for (i18 = i17; i18 < 1; ++i18) {
                    Test.iArrFld = Test.iArrFld;
                    i3 = (int)Test.fFld;
                    Test.sFld += (short)(i18 * i18);
                    switch (((i16 >>> 1) % 7) + 40) {
                    case 40:
                        Test.fArrFld[i18] += Test.instanceCount;
                        i3 += (i18 - Test.sFld);
                        break;
                    case 41:
                    case 42:
                        Test.instanceCount = 2303534793L;
                        if (b1) {
                        } else {
                            Test.instanceCount &= Test.instanceCount;
                        }
                        try {
                            i3 = (-239 / i18);
                            i3 = (-153 % i14);
                            i3 = (Test.iArrFld[i16 + 1] % i16);
                        } catch (ArithmeticException a_e) {}
                        Test.instanceCount = i15;
                        break;
                    case 43:
                        Test.instanceCount += (((i18 * i2) + Test.instanceCount) - i18);
                        break;
                    case 44:
                        Test.instanceCount += i18;
                        break;
                    case 45:
                        i15 = i16;
                        break;
                    case 46:
                        Test.instanceCount = (long)Test.fFld;
                        break;
                    default:
                        Test.bArrFld[i16 - 1][i16 + 1] = b1;
                    }
                }
            }
        } while (++i16 < 281);
        long meth_res = i2 + i3 + Double.doubleToLongBits(d2) + i14 + i15 + by2 + i16 + i17 + i18 + i19 + (b1 ? 1 : 0);
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public static int iMeth() {


        fMeth();
        long meth_res = 0;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=48239, i1=68, i20=-37745, i21=-48483, i22=-5, i23=26870, i24=51561;
        short s=-31737;
        byte by3=43;
        boolean b2=false;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, 57885L);

        for (i = 11; i < 228; i++) {
            i1 = s;
            i1 *= iMeth();
            switch ((i % 10) + 58) {
            case 58:
                Test.instanceCount = 96L;
            case 59:
                dArrFld = dArrFld;
                Test.iArrFld = Test.iArrFld;
                Test.iArrFld[i] *= (int)Test.fFld;
                break;
            case 60:
                by3 = (byte)s;
                i1 += (((i * by3) + i1) - Test.instanceCount);
                i20 = 1;
                while (++i20 < 116) {
                    Test.fArrFld[i] -= -65;
                    lArr1[i20 + 1] = lArr1[i20];
                    i1 >>= (int)2901131280L;
                    by3 <<= (byte)Test.sFld;
                    Test.iArrFld[i20 - 1] = i20;
                    i1 += (i20 * i20);
                    lArr1[i20][i20 + 1] = i;
                    Test.fFld += Test.fFld;
                    if (b2) break;
                    Test.instanceCount += (i20 ^ Test.instanceCount);
                    i1 += i20;
                    Test.instanceCount *= 3939750550585354670L;
                }
                break;
            case 61:
                Test.byArrFld[i][i - 1] = (byte)Test.instanceCount;
                break;
            case 62:
            case 63:
                for (i21 = 2; i21 < 116; i21++) {
                    dArrFld[i21 - 1][i] += i;
                    i22 = 13;
                    for (i23 = 1; i23 < 2; i23++) {
                        Test.instanceCount += -2568144743858593222L;
                        i24 ^= (int)Test.instanceCount;
                        Test.iArrFld = Test.iArrFld;
                        i22 = Test.sFld;
                        b2 = b2;
                        i22 += (i23 * i23);
                        Test.instanceCount += (i23 * i23);
                        by3 |= (byte)Test.instanceCount;
                        Test.instanceCount = i23;
                        s = (short)-222;
                        b2 = b2;
                    }
                    b2 = b2;
                }
                break;
            case 64:
                Test.iArrFld = FuzzerUtils.int1array(N, (int)-6);
                break;
            case 65:
                Test.sFld ^= (short)0;
                break;
            case 66:
                Test.fFld += Test.fFld;
            case 67:
                Test.instanceCount >>= 46633;
                break;
            default:
                Test.bArrFld[i - 1] = Test.bArrFld[i];
            }
        }

        FuzzerUtils.out.println("i i1 s = " + i + "," + i1 + "," + s);
        FuzzerUtils.out.println("by3 i20 b2 = " + by3 + "," + i20 + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 lArr1 = " + i24 + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.fFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.bArrFld Test.iArrFld Test.fArrFld = " + FuzzerUtils.checkSum(Test.bArrFld) + ","
            + FuzzerUtils.checkSum(Test.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("dArrFld Test.byArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) +
            "," + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  fMeth ->  fMeth iMeth mainTest
//DEBUG  vMeth ->  vMeth fMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth fMeth iMeth mainTest
//DEBUG  Depth = 4
//DEBUG  Classes = 1
//DEBUG  static objects = {}
