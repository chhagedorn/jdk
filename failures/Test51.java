// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 17 01:41:23 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-3318864058857664404L;
    public int iFld=-66;
    public static volatile float fFld=-2.674F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -184);
    }

    public static long iMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(int i8) {

        int i9=198, i10=-6, i11=-1, i12=47631, i13=17545;
        float f=74.167F;
        boolean b=false;

        for (i9 = 3; i9 < 227; i9 += 3) {
            if (b) {
                Test.instanceCount = (long)f;
                switch (((-190 >>> 1) % 4) + 81) {
                case 81:
                case 82:
                    i11 = 1;
                    do {
                        i8 &= i10;
                        for (i12 = i11; i12 < 1; ++i12) {
                            Test.instanceCount -= i10;
                            i8 += i12;
                            Test.instanceCount = i11;
                            Test.iArrFld[i11] += i13;
                            i10 ^= 3;
                            f -= 73;
                            i10 += (i12 * i12);
                            Test.instanceCount = Test.instanceCount;
                        }
                    } while (++i11 < 21);
                case 83:
                    f += (i9 - f);
                    break;
                case 84:
                    Test.instanceCount *= (long)f;
                }
            } else {
                i10 += i8;
            }
        }
        long meth_res = i8 + i9 + i10 + Float.floatToIntBits(f) + i11 + i12 + i13 + (b ? 1 : 0);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i5, int i6) {

        short s=-20840;
        int i14=8, i15=-58170, i16=7;
        float f1=74.813F;
        boolean b1=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 238L);

        for (int i7 : Test.iArrFld) {
            s |= (short)Test.instanceCount;
            lArr[(i6 >>> 1) % N] &= (-Short.reverseBytes(s));
            i7 += Integer.reverseBytes(Integer.reverseBytes(iMeth1(i5)));
        }
        for (i14 = 13; 272 > i14; ++i14) {
            i16 = 6;
            while (--i16 > 0) {
                i5 = (int)Test.instanceCount;
                Test.iArrFld[i16 + 1] *= (int)f1;
                if (b1) break;
                if (b1) break;
            }
            i5 *= i14;
            i6 += (((i14 * i5) + Test.instanceCount) - i16);
            i15 += i5;
        }
        Test.iArrFld[(7 >>> 1) % N] -= -7;
        i5 = i5;
        long meth_res = i5 + i6 + s + i14 + i15 + i16 + Float.floatToIntBits(f1) + (b1 ? 1 : 0) +
            FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static int iMeth(double d, int i4) {

        double d1=1.24613;
        int i17=-25537, i18=51730, i19=208, i20=-191, i21=-128;
        float f2=57.556F;

        lMeth(-79, -156);
        for (d1 = 5; d1 < 369; ++d1) {
            i17 -= (int)Test.instanceCount;
            i4 += (int)d1;
            for (i18 = 1; i18 < 5; i18++) {
                for (i20 = 1; 2 > i20; ++i20) {
                    Test.iArrFld[i20] += i19;
                    i19 += (((i20 * f2) + i17) - i18);
                    Test.instanceCount *= i18;
                    i21 -= i21;
                    i4 += i20;
                    i21 >>>= i19;
                    Test.iArrFld[(int)(d1 + 1)] *= i18;
                    f2 += (-4 + (i20 * i20));
                    i19 += i20;
                }
            }
        }
        long meth_res = Double.doubleToLongBits(d) + i4 + Double.doubleToLongBits(d1) + i17 + i18 + i19 + i20 + i21 +
            Float.floatToIntBits(f2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=-227, i1=9, i2=-5, i3=8, i22=178, i23=14, i24=25161, i25=5, i26=9, i27=-3, iArr[]=new int[N];
        double d3=1.28039;
        boolean b2=true;
        float fArr[]=new float[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr, 10321);
        FuzzerUtils.init(fArr, 1.170F);
        FuzzerUtils.init(lArr1, -2L);

        for (i = 16; i < 343; ++i) {
            double d2=-72.91246;
            for (i2 = 3; i2 < 77; i2++) {
                iArr[i - 1] += (int)(Test.instanceCount--);
                i3 = i3;
            }
            iMeth(d2, -10);
            i3 += iFld;
            Test.iArrFld[i] ^= i3;
            i1 >>= i22;
            iFld += 220;
            for (d3 = 3; d3 < 77; d3++) {
                iFld = (int)Test.fFld;
                for (i24 = 2; i < i24; i24 -= 2) {
                    if (b2) break;
                    fArr[(int)(d3 + 1)] += Test.fFld;
                    i23 = -62094;
                    d2 -= d3;
                    i3 += (i24 + i25);
                    lArr1[i24] = 14L;
                }
                for (i26 = 1; i26 < 2; ++i26) {
                    if (b2) continue;
                    Test.fFld -= 3;
                    i25 >>= (int)Test.instanceCount;
                    i27 += i26;
                    i25 = iFld;
                    Test.instanceCount &= iFld;
                    Test.fFld += (((i26 * i24) + iFld) - i25);
                    i1 = i22;
                }
            }
            iFld += (i ^ i23);
            i23 += (i * i);
        }
        i3 *= iFld;

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i22 d3 = " + i3 + "," + i22 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i23 i24 i25 = " + i23 + "," + i24 + "," + i25);
        FuzzerUtils.out.println("b2 i26 i27 = " + (b2 ? 1 : 0) + "," + i26 + "," + i27);
        FuzzerUtils.out.println("iArr fArr lArr1 = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + "," + FuzzerUtils.checkSum(lArr1));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.fFld = " + Test.instanceCount + "," + iFld + "," +
            Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  lMeth ->  lMeth iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 lMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
