// Generated by Java* Fuzzer test generator (1.0.001). Tue Aug 15 23:22:24 2023
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=-83L;
    public static float fFld=-2.607F;
    public boolean bFld=false;
    public static float fArrFld[]=new float[N];
    public volatile long lArrFld[]=new long[N];
    public short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -1.147F);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(boolean b) {

        int i4=21428, i5=-60, i6=-57412;
        byte by=-19;

        i4 = i4;
        for (i5 = 161; i5 > 7; i5--) {
            i6 |= i6;
            by += (byte)i5;
        }
        vMeth1_check_sum += (b ? 1 : 0) + i4 + i5 + i6 + by;
    }

    public static void vMeth(int i2, long l) {

        long l1=-361056448751225444L, lArr[]=new long[N];
        int i3=11, i7=-8, i8=-10096, i9=-108, i10=0, i11=-9;
        boolean b1=false;
        double d=1.94043;
        byte by1=-49;

        FuzzerUtils.init(lArr, 25655L);

        for (l1 = 8; l1 < 151; l1++) {
            vMeth1(b1);
        }
        i7 = 1;
        while (++i7 < 258) {
            i8 = 1;
            while (++i8 < 6) {
                if (i2 != 0) {
                    vMeth_check_sum += i2 + l + l1 + i3 + (b1 ? 1 : 0) + i7 + i8 + Double.doubleToLongBits(d) + by1 +
                        i9 + i10 + i11 + FuzzerUtils.checkSum(lArr);
                    return;
                }
                Test.fFld = i3;
                d = -4;
            }
            by1 = (byte)i2;
            Test.instanceCount -= i3;
        }
        b1 = b1;
        Test.fFld -= i2;
        i9 = 254;
        while (--i9 > 0) {
            for (i10 = 6; i10 > i9; i10 -= 2) {
                i3 -= i9;
                lArr[i10 - 1] *= -38372;
            }
        }
        vMeth_check_sum += i2 + l + l1 + i3 + (b1 ? 1 : 0) + i7 + i8 + Double.doubleToLongBits(d) + by1 + i9 + i10 +
            i11 + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(float f, int i1) {

        int i12=-129, i13=-10388, i14=404, i15=37947, i16=24;
        boolean b2=false;
        double d1=2.61646;
        long lArr1[][]=new long[N][N];

        FuzzerUtils.init(lArr1, -10L);

        vMeth(-9, 737223105L);
        for (i12 = 5; i12 < 156; ++i12) {
            for (i14 = i12; 10 > i14; ++i14) {
                i1 = i13;
                lArr1[i14 - 1][i14 - 1] = i15;
                if (b2) break;
                i1 = (int)3336434511L;
                i15 >>= (int)Test.instanceCount;
                for (d1 = 1; d1 < 1; d1++) {
                    Test.instanceCount += (long)d1;
                    i15 = i12;
                    Test.instanceCount = i12;
                    Test.instanceCount -= 48127;
                    i15 *= (int)Test.instanceCount;
                    b2 = b2;
                }
            }
        }
        long meth_res = Float.floatToIntBits(f) + i1 + i12 + i13 + i14 + i15 + (b2 ? 1 : 0) +
            Double.doubleToLongBits(d1) + i16 + FuzzerUtils.checkSum(lArr1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=157, i17=-37250, i18=166, i20=46948, i21=-22851, i22=-45, i23=1, iArr[]=new int[N];
        byte by2=97;
        double d2=25.33247;
        short s=12457;
        long l2=1466058604380425457L;

        FuzzerUtils.init(iArr, 15997);

        i >>>= iMeth(Test.fFld, -10);
        iArr[(i >>> 1) % N] >>= i;
        for (i17 = 2; i17 < 316; ++i17) {
            i -= -10;
            Test.fArrFld = Test.fArrFld;
        }
        for (int i19 : iArr) {
            by2 += (byte)d2;
            bFld = false;
            i18 *= i18;
            for (i20 = 2; 63 > i20; i20++) {
                Test.instanceCount = i20;
                switch ((((28668 >>> 1) % 7) * 5) + 117) {
                case 127:
                    for (i22 = 1; i22 < 2; i22 += 2) {
                        switch ((((i20 >>> 1) % 6) * 5) + 80) {
                        case 95:
                            if (bFld) continue;
                            d2 = 35;
                        case 94:
                            Test.instanceCount = i17;
                            i21 += (-34378 + (i22 * i22));
                            break;
                        case 100:
                            lArrFld[i20 - 1] -= i18;
                            iArr[i20 + 1] >>= (int)Test.instanceCount;
                            sArrFld[i22] >>>= s;
                            break;
                        case 104:
                            i21 *= -15999;
                            break;
                        case 108:
                            iArr = iArr;
                            i23 = (int)-25656L;
                            break;
                        case 98:
                            i18 += i22;
                            i19 -= i18;
                            l2 -= (long)47.354F;
                            break;
                        default:
                            i += i;
                            l2 += i23;
                            Test.instanceCount <<= i19;
                        }
                    }
                    break;
                case 137:
                    iArr[i20 + 1] = -48230;
                    break;
                case 148:
                    lArrFld[i20 - 1] += i18;
                    break;
                case 144:
                    s -= (short)i18;
                case 136:
                    i19 += -27800;
                    break;
                case 129:
                case 146:
                    l2 = by2;
                }
            }
        }

        FuzzerUtils.out.println("i i17 i18 = " + i + "," + i17 + "," + i18);
        FuzzerUtils.out.println("by2 d2 i20 = " + by2 + "," + Double.doubleToLongBits(d2) + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("s l2 iArr = " + s + "," + l2 + "," + FuzzerUtils.checkSum(iArr));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld bFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + (bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.fArrFld lArrFld sArrFld = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," + FuzzerUtils.checkSum(lArrFld) + "," +
            FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
