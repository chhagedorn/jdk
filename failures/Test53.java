// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 17 00:06:14 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=727441682L;
    public int iFld=37300;
    public static int iFld1=10;
    public static byte byFld=102;
    public static float fFld=1.719F;
    public static double dFld=-120.731;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];
    public static volatile double dArrFld[]=new double[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 35);
        FuzzerUtils.init(Test.fArrFld, 0.746F);
        FuzzerUtils.init(Test.dArrFld, 0.5408);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static int iMeth1() {

        byte by=-51;

        Test.iFld1 = by;
        long meth_res = by;
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static double dMeth(double d, long l3, boolean b) {

        int i7=-61289, i8=36307, i9=27913, i10=-43562, i11=4, i12=48560;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, 238L);

        i7 = 1;
        do {
            Test.iFld1 &= i7;
            for (i8 = 1; i8 < 5; ++i8) {
                for (i10 = 1; 2 > i10; ++i10) {
                    if (b) break;
                    Test.iFld1 = 5;
                    i9 = 5;
                    lArr1[i10 + 1] >>= Test.instanceCount;
                    i9 *= 39805;
                    Test.iFld1 += 217;
                    Test.dArrFld = Test.dArrFld;
                    i11 -= (int)Test.instanceCount;
                }
                i9 += (int)Test.fFld;
                if (b) break;
                Test.instanceCount += (i8 * i12);
            }
        } while (++i7 < 374);
        long meth_res = Double.doubleToLongBits(d) + l3 + (b ? 1 : 0) + i7 + i8 + i9 + i10 + i11 + i12 +
            FuzzerUtils.checkSum(lArr1);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(long l, int i3, long l1) {

        long l2=9L;
        int i4=-48005, i5=5, i6=-253, i13=141, i14=-131;
        boolean b1=true;

        Test.iFld1 >>= (int)(((i3 + l2) * (i3++)) - ((++Test.iFld1) + (l1--)));
        i4 = 319;
        while ((i4 -= 2) > 0) {
            i3 += (((i4 * i4) + i3) - l2);
            for (i5 = i4; 10 > i5; i5 += 3) {
                Test.byFld += (byte)(i5 * l);
                Test.fArrFld[i4 - 1] = (--i6);
                i6 = (int)(((i3--) + (Test.iFld1 -= 128)) * dMeth(Test.dFld, Test.instanceCount, b1));
                for (i13 = 1; i13 > 1; i13--) {
                    Test.fFld += (i13 + i14);
                    i6 += (int)l2;
                }
                Test.iArrFld[i4 - 1] *= -51;
                switch (((i4 % 5) * 5) + 68) {
                case 81:
                    Test.instanceCount += l;
                    i6 += i5;
                    if (b1) break;
                    break;
                case 89:
                    Test.dArrFld[i4] -= i14;
                    break;
                case 75:
                    l += (i5 ^ i14);
                case 71:
                    Test.iArrFld[i5] ^= (int)118L;
                    break;
                case 82:
                    Test.byFld *= (byte)Test.fFld;
                    break;
                default:
                    l1 += (6290084853785407083L + (i5 * i5));
                }
            }
        }
        vMeth_check_sum += l + i3 + l1 + l2 + i4 + i5 + i6 + (b1 ? 1 : 0) + i13 + i14;
    }

    public static int iMeth() {

        int i=12, i1=-13, i2=7, i15=20434, i16=-173;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -8873L);

        i <<= (int)Test.instanceCount;
        lArr[(i >>> 1) % N] %= ((iMeth1() % (Test.instanceCount | 1)) | 1);
        for (i1 = 4; 349 > i1; ++i1) {
            i += (int)Test.instanceCount;
            vMeth(-6429531167907872587L, i, -62756599L);
            i -= i2;
            for (i15 = 1; 5 > i15; i15++) {
                Test.fFld += Test.fFld;
            }
        }
        Test.iArrFld[(70 >>> 1) % N] = Test.iFld1;
        Test.instanceCount |= i16;
        long meth_res = i + i1 + i2 + i15 + i16 + FuzzerUtils.checkSum(lArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=-72.251F;
        int i17=-6, i18=-56882, i19=31069, i20=33, i21=49, i22=166;
        boolean b2=false;
        short s=-31339;

        Test.iArrFld[(iFld >>> 1) % N] -= (int)((-(f + 52108)) + Math.max(iMeth(), Test.iFld1));
        Test.dArrFld[(Test.iFld1 >>> 1) % N] += Test.fFld;
        Test.iArrFld[(5 >>> 1) % N] += (int)11L;
        Test.byFld = (byte)0;
        for (i17 = 1; i17 < 148; i17++) {
            for (i19 = 7; i19 < 171; i19++) {
                i20 += 97;
                iFld = (int)713345557L;
                iFld += i20;
                Test.iFld1 -= i18;
                Test.iFld1 *= i20;
                Test.iFld1 -= (int)f;
                Test.instanceCount += i19;
                for (i21 = 2; i21 > i17; i21 -= 2) {
                    if (b2) break;
                    switch ((i21 % 1) + 108) {
                    case 108:
                        Test.iArrFld[i21] -= (int)-79.17182;
                        Test.instanceCount += i18;
                        Test.iArrFld[i19 - 1] += (int)Test.dFld;
                        Test.iFld1 += (int)48.670F;
                        break;
                    }
                    s += (short)-7;
                    i22 <<= (int)Test.instanceCount;
                    Test.instanceCount += (-4 + (i21 * i21));
                    Test.instanceCount = i17;
                    if (b2) break;
                    i22 += (i21 * i21);
                    i20 += i17;
                    i20 = i21;
                }
                i20 += (36448 + (i19 * i19));
                i20 = i21;
            }
        }

        FuzzerUtils.out.println("f i17 i18 = " + Float.floatToIntBits(f) + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 b2 s = " + i22 + "," + (b2 ? 1 : 0) + "," + s);

        FuzzerUtils.out.println("Test.instanceCount iFld Test.iFld1 = " + Test.instanceCount + "," + iFld + "," +
            Test.iFld1);
        FuzzerUtils.out.println("Test.byFld Test.fFld Test.dFld = " + Test.byFld + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.iArrFld Test.fArrFld Test.dArrFld = " + FuzzerUtils.checkSum(Test.iArrFld) + ","
            + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
