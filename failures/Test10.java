// Generated by Java* Fuzzer test generator (1.0.001). Sat Jul  1 12:42:07 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3233756388L;
    public static float fFld=0.51F;
    public static short sFld=-5974;
    public static double dFld=66.55256;
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 632161073L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, long l, int i6) {

        byte by=-81;
        int i7=-238, i8=4, i9=107, i10=4753, i11=97, iArr[]=new int[N];
        long l1=236L;

        FuzzerUtils.init(iArr, -1);

        if (false) {
            by = (byte)-62721;
            for (i7 = 6; i7 < 265; i7++) {
                iArr[i7 + 1] = i7;
                i6 |= (int)l;
            }
            i9 = 1;
            do {
                for (i10 = 1; i10 < 6; i10++) {
                    switch ((((i11 >>> 1) % 2) * 5) + 40) {
                    case 47:
                        Test.fFld = i11;
                        i8 %= (int)(i11 | 1);
                        i8 = (int)l;
                        break;
                    case 41:
                        l1 = 1;
                        do {
                            i5 = 0;
                            iArr[i9 - 1] >>= (int)l1;
                            iArr[i10] -= i6;
                        } while (++l1 < 2);
                        break;
                    default:
                        Test.instanceCount += -8;
                    }
                }
            } while (++i9 < 299);
            vMeth2_check_sum += i5 + l + i6 + by + i7 + i8 + i9 + i10 + i11 + l1 + FuzzerUtils.checkSum(iArr);
            return;
        }
        vMeth2_check_sum += i5 + l + i6 + by + i7 + i8 + i9 + i10 + i11 + l1 + FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(int i4) {

        long l2=45726L;
        int i12=48405, i13=13, i14=-10, iArr1[]=new int[N];
        byte by1=-108;
        double d=0.57316;

        FuzzerUtils.init(iArr1, -8150);

        vMeth2(i4, 3326170747L, i4);
        i4 = i4;
        for (l2 = 9; l2 < 288; l2++) {
            Test.fFld += ((long)l2 ^ (long)i4);
            for (i13 = 6; i13 > 1; --i13) {
                i4 = 103;
                by1 += (byte)(((i13 * i14) + i12) - i12);
                if (i12 != 0) {
                    vMeth1_check_sum += i4 + l2 + i12 + i13 + i14 + by1 + Double.doubleToLongBits(d) +
                        FuzzerUtils.checkSum(iArr1);
                    return;
                }
                i12 += i13;
                iArr1[(int)(l2 + 1)] = (int)d;
                iArr1[(int)(l2 - 1)] -= (int)d;
                Test.lArrFld[(int)(l2 - 1)] -= (long)Test.fFld;
                Test.lArrFld = Test.lArrFld;
                Test.sFld <<= (short)Test.instanceCount;
            }
            i4 += i14;
        }
        vMeth1_check_sum += i4 + l2 + i12 + i13 + i14 + by1 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth(int i1, int i2) {

        int i3=170, i15=10, i16=-162, i17=148, i18=60191, iArr2[]=new int[N];
        boolean b=true;
        short s=-15865;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 0.56667);
        FuzzerUtils.init(iArr2, 24254);

        i3 = 1;
        while (++i3 < 331) {
            vMeth1(i3);
            Test.fFld += (((i3 * i3) + i1) - i2);
            for (i15 = 5; i15 > 1; i15--) {
                for (i17 = i15; i17 < 2; ++i17) {
                    switch ((i17 % 1) + 103) {
                    case 103:
                        i1 = i17;
                        switch ((i3 % 8) + 119) {
                        case 119:
                            b = b;
                            dArr[i17] = Test.instanceCount;
                            break;
                        case 120:
                            Test.fFld = i3;
                            i18 -= (int)Test.instanceCount;
                            break;
                        case 121:
                            s += (short)i3;
                            iArr2[i3 - 1] -= -11;
                            i2 += (int)Test.instanceCount;
                            break;
                        case 122:
                            i2 <<= i16;
                        case 123:
                            i1 = (int)-6L;
                            break;
                        case 124:
                            iArr2[i15] |= i3;
                            break;
                        case 125:
                            iArr2[i3] = i15;
                            break;
                        case 126:
                            b = b;
                            break;
                        default:
                            i16 <<= i18;
                        }
                        break;
                    }
                }
            }
        }
        vMeth_check_sum += i1 + i2 + i3 + i15 + i16 + i17 + i18 + (b ? 1 : 0) + s +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i=17880, i20=3, i21=30, i22=-229, i23=-61560, i24=-15, i25=2, i26=-31, i27=-4, i28=3, i29=-151, iArr3[]=new
            int[N], iArr4[]=new int[N];
        byte by2=52, byArr[]=new byte[N];
        boolean b1=false;

        FuzzerUtils.init(byArr, (byte)2);
        FuzzerUtils.init(iArr3, 6);
        FuzzerUtils.init(iArr4, -7);

        i = 1;
        do {
            int i19=-199;
            vMeth(i, i);
            i19 = 49430;
        } while ((i += 2) < 167);
        for (i20 = 6; 125 > i20; i20++) {
            i21 = i;
            if (true) {
                for (i22 = 2; 211 > i22; i22++) {
                    Test.lArrFld = Test.lArrFld;
                }
                i21 -= (int)Test.dFld;
                for (i24 = 211; i24 > i20; --i24) {
                    for (i26 = 1; 1 > i26; i26++) {
                        i23 += by2;
                        i25 >>= i20;
                        byArr[i24 + 1] -= (byte)i27;
                        if (b1) break;
                        Test.fFld = i24;
                        i21 += (int)(4L + (i26 * i26));
                        i23 = i26;
                    }
                    iArr3[i20 - 1] = i25;
                    iArr3[i20 - 1] *= (int)Test.fFld;
                    for (i28 = 1; i28 > i20; i28 -= 2) {
                        Test.instanceCount = -8607;
                        i23 = i21;
                        iArr4[i20 + 1] = (int)Test.dFld;
                        i21 -= i26;
                        try {
                            i23 = (i27 / 47);
                            i23 = (i24 / i22);
                            i27 = (i29 / 59614);
                        } catch (ArithmeticException a_e) {}
                        i25 *= i28;
                        if (b1) break;
                        iArr4[i28 + 1] += i29;
                        byArr[i20] += (byte)i24;
                    }
                }
            } else {
                Test.instanceCount += (i20 + i24);
            }
        }

        FuzzerUtils.out.println("i i20 i21 = " + i + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("by2 b1 i28 = " + by2 + "," + (b1 ? 1 : 0) + "," + i28);
        FuzzerUtils.out.println("i29 byArr iArr3 = " + i29 + "," + FuzzerUtils.checkSum(byArr) + "," +
            FuzzerUtils.checkSum(iArr3));
        FuzzerUtils.out.println("iArr4 = " + FuzzerUtils.checkSum(iArr4));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.sFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.sFld);
        FuzzerUtils.out.println("Test.dFld Test.lArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
