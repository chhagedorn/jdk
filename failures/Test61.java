// Generated by Java* Fuzzer test generator (1.0.001). Fri Aug 25 08:49:05 2023
public class Test {

    public static final int N = 400;

    public static long instanceCount=20L;
    public static float fFld=2.866F;
    public static double dFld=-27.104830;
    public static boolean bFld=false;
    public static long lArrFld[]=new long[N];
    public static double dArrFld[]=new double[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 642910771L);
        FuzzerUtils.init(Test.dArrFld, -1.39249);
        FuzzerUtils.init(Test.fArrFld, 87.858F);
    }

    public static long lMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;

    public static void vMeth(int i5, long l, int i6) {

        int i7=-239, i8=-51545, i9=228, iArr1[]=new int[N];
        long l1=-178L;
        boolean b1=false;

        FuzzerUtils.init(iArr1, -251);

        i5 *= (int)l;
        for (i7 = 5; i7 < 191; i7++) {
            l1 = -48127;
            i8 -= i6;
            i5 += (i7 * i7);
            iArr1[i7 + 1] = i7;
            i9 = 1;
            while (++i9 < 9) {
                i5 += i5;
            }
            i6 += i7;
            i8 = (int)5L;
            if (b1) break;
        }
        Test.dArrFld[(i5 >>> 1) % N] = i6;
        iArr1 = iArr1;
        i6 <<= i9;
        iArr1[(i5 >>> 1) % N] <<= i7;
        vMeth_check_sum += i5 + l + i6 + i7 + i8 + l1 + i9 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i4) {

        int i10=-13, i11=3, i12=-2, i13=-240, i14=41984, iArr[]=new int[N];
        short s=-1655;

        FuzzerUtils.init(iArr, 32);

        iArr[(i4 >>> 1) % N] -= (int)Test.lArrFld[(i4 >>> 1) % N];
        vMeth(i4, Test.instanceCount, i4);
        for (i10 = 13; i10 < 224; ++i10) {
            i11 += s;
            for (i12 = i10; i12 < 8; i12++) {
                try {
                    i11 = (i13 / -74);
                    i13 = (i12 % 1570923257);
                    i11 = (i13 % i11);
                } catch (ArithmeticException a_e) {}
                i4 += (int)-4L;
                i11 += (i12 * i12);
                i14 = 1;
                do {
                    try {
                        i13 = (i13 % i10);
                        i11 = (184 % i4);
                        i13 = (-21757 / i13);
                    } catch (ArithmeticException a_e) {}
                    i11 = (int)Test.instanceCount;
                    Test.lArrFld[i10] >>= Test.instanceCount;
                    if (true) continue;
                    Test.lArrFld[i14] = s;
                } while (++i14 < 1);
                i4 += (int)Test.fFld;
            }
        }
        long meth_res = i4 + i10 + i11 + s + i12 + i13 + i14 + FuzzerUtils.checkSum(iArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static long lMeth(int i2, int i3, boolean b) {

        int i15=-15, i16=36965, i17=-12, i18=60015, i19=38545, i20=5, i21=146;

        i3 = (i2 * iMeth(i3));
        Test.instanceCount = i2;
        for (i15 = 4; i15 < 216; ++i15) {
            i2 += (i15 | Test.instanceCount);
            if (b) break;
        }
        for (i17 = 9; i17 < 175; i17++) {
            i19 = 1;
            while (++i19 < 10) {
                Test.fFld = Test.instanceCount;
                for (i20 = 1; i20 < 1; ++i20) {
                    switch ((((i15 >>> 1) % 2) * 5) + 24) {
                    case 27:
                        Test.instanceCount = (long)Test.fFld;
                        i18 = (int)Test.instanceCount;
                        break;
                    case 28:
                        i2 = i3;
                        Test.fFld -= -13L;
                        break;
                    default:
                        i2 += (((i20 * i19) + i19) - i21);
                    }
                }
            }
        }
        long meth_res = i2 + i3 + (b ? 1 : 0) + i15 + i16 + i17 + i18 + i19 + i20 + i21;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=12, i1=-25937, i22=-218, i23=-13, i24=79, i25=10, i26=0, i27=1, i28=7, i29=-2058, iArr2[]=new int[N];
        byte by=-104;

        FuzzerUtils.init(iArr2, 33685);

        for (i = 6; i < 289; ++i) {
            lMeth(i, i1, false);
            iArr2[i - 1] -= i;
            i1 = (int)Test.dFld;
            Test.dFld = Test.fFld;
            for (i22 = 1; i22 < 89; ++i22) {
                i1 += i;
                switch ((i22 % 6) + 87) {
                case 87:
                    Test.instanceCount += i22;
                    break;
                case 88:
                case 89:
                    if (Test.bFld) break;
                    break;
                case 90:
                    i1 += (int)Test.instanceCount;
                    break;
                case 91:
                    i1 = i;
                    Test.instanceCount += (i22 + i22);
                    by = (byte)Test.instanceCount;
                    for (i24 = 2; i24 > i22; i24 -= 2) {
                        i25 >>= (int)Test.instanceCount;
                        iArr2 = iArr2;
                        iArr2[i24] = 29389;
                        i23 = i25;
                        i23 *= (int)Test.instanceCount;
                        iArr2[i24 + 1] = i22;
                        i1 += by;
                        iArr2 = iArr2;
                    }
                    break;
                case 92:
                    for (i26 = 1; i26 < 2; ++i26) {
                        Test.dFld -= i27;
                    }
                    break;
                }
                Test.fFld = 2380431806L;
                Test.instanceCount *= Test.instanceCount;
                for (i28 = 1; i28 < 2; i28++) {
                    iArr2[i28 - 1] = (int)Test.fFld;
                    Test.fArrFld[i22 - 1] += i28;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i22 = " + i + "," + i1 + "," + i22);
        FuzzerUtils.out.println("i23 by i24 = " + i23 + "," + by + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 iArr2 = " + i28 + "," + i29 + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.bFld Test.lArrFld Test.dArrFld = " + (Test.bFld ? 1 : 0) + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));
        FuzzerUtils.out.println("Test.fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
